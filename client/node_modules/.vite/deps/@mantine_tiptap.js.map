{
  "version": 3,
  "sources": ["../../@mantine/tiptap/src/RichTextEditor.context.ts", "../../@mantine/tiptap/src/Content/Content.styles.ts", "../../@mantine/tiptap/src/Content/Content.tsx", "../../@mantine/tiptap/src/controls/Control/Control.styles.ts", "../../@mantine/tiptap/src/controls/Control/Control.tsx", "../../@mantine/tiptap/src/controls/ControlsGroup/ControlsGroup.styles.ts", "../../@mantine/tiptap/src/controls/ControlsGroup/ControlsGroup.tsx", "../../@mantine/tiptap/src/Toolbar/Toolbar.styles.ts", "../../@mantine/tiptap/src/Toolbar/Toolbar.tsx", "../../@mantine/tiptap/src/labels.ts", "../../@mantine/tiptap/src/RichTextEditor.styles.ts", "../../@mantine/tiptap/src/controls/ControlBase/ControlBase.tsx", "../../@mantine/tiptap/src/controls/ControlBase/create-control.tsx", "../../@mantine/tiptap/src/controls/controls.tsx", "../../@mantine/tiptap/src/controls/LinkControl/LinkControl.styles.ts", "../../@mantine/tiptap/src/controls/LinkControl/LinkControl.tsx", "../../@mantine/tiptap/src/controls/ColorPickerControl/ColorPickerControl.tsx", "../../@mantine/tiptap/src/controls/ColorControl/ColorControl.tsx", "../../@mantine/tiptap/src/RichTextEditor.tsx", "../../linkifyjs/dist/linkify.es.js", "../../@tiptap/extension-link/src/helpers/autolink.ts", "../../@tiptap/extension-link/src/helpers/clickHandler.ts", "../../@tiptap/extension-link/src/helpers/pasteHandler.ts", "../../@tiptap/extension-link/src/link.ts", "../../@mantine/tiptap/src/extensions/Link.ts"],
  "sourcesContent": ["import { Styles, ClassNames } from '@mantine/core';\nimport { createSafeContext } from '@mantine/utils';\nimport { Editor } from '@tiptap/react';\nimport { RichTextEditorLabels } from './labels';\nimport type { RichTextEditorStylesNames } from './RichTextEditor';\n\ninterface RichTextEditorContext {\n  editor: Editor;\n  labels: RichTextEditorLabels;\n  withCodeHighlightStyles: boolean;\n  withTypographyStyles: boolean;\n  classNames: ClassNames<RichTextEditorStylesNames>;\n  styles: Styles<RichTextEditorStylesNames>;\n  unstyled: boolean;\n  variant: string;\n}\n\nexport const [RichTextEditorProvider, useRichTextEditorContext] =\n  createSafeContext<RichTextEditorContext>('RichTextEditor was not found in tree');\n", "import { createStyles, MantineTheme, rem } from '@mantine/core';\n\ninterface ContentStylesParams {\n  withCodeHighlightStyles: boolean;\n  withTypographyStyles: boolean;\n}\n\nfunction getCodeHighlight(withCodeHighlightStyles: boolean, theme: MantineTheme) {\n  if (!withCodeHighlightStyles) {\n    return null;\n  }\n\n  const highlightIndex = theme.colorScheme === 'dark' ? 5 : 7;\n\n  return {\n    pre: {\n      background:\n        theme.colorScheme === 'dark'\n          ? theme.colors.dark[8]\n          : theme.fn.rgba(theme.colors.gray[0], 0.65),\n      borderRadius: theme.fn.radius(),\n      color: theme.colorScheme === 'dark' ? theme.colors.dark[0] : theme.colors.gray[9],\n      fontFamily: theme.fontFamilyMonospace,\n      padding: `${theme.spacing.md} ${theme.spacing.xl}`,\n\n      '& code': {\n        background: 'none',\n        color: 'inherit',\n        fontSize: theme.fontSizes.sm,\n        padding: 0,\n      },\n\n      ' & .hljs-comment, & .hljs-quote': {\n        color: theme.colorScheme === 'dark' ? theme.colors.dark[2] : theme.colors.gray[5],\n      },\n\n      '& .hljs-variable, & .hljs-template-variable, & .hljs-attribute, & .hljs-tag, & .hljs-name, & .hljs-regexp, & .hljs-link, & .hljs-name, & .hljs-selector-id, & .hljs-selector-class':\n        {\n          color: theme.colors.red[highlightIndex],\n        },\n\n      '& .hljs-number, & .hljs-meta, & .hljs-built_in, & .hljs-builtin-name, & .hljs-literal, & .hljs-type, & .hljs-params':\n        {\n          color: theme.colors[theme.colorScheme === 'dark' ? 'cyan' : 'blue'][highlightIndex],\n        },\n\n      '& .hljs-string, & .hljs-symbol, & .hljs-bullet': {\n        color: theme.colors.red[highlightIndex],\n      },\n\n      '& .hljs-title, & .hljs-section': {\n        color: theme.colors[theme.colorScheme === 'dark' ? 'yellow' : 'pink'][highlightIndex],\n      },\n\n      '& .hljs-keyword, & .hljs-selector-tag': {\n        color: theme.colors.violet[highlightIndex],\n      },\n\n      '& .hljs-emphasis': {\n        fontStyle: 'italic',\n      },\n\n      '& .hljs-strong': {\n        fontWeight: 700,\n      },\n    },\n  };\n}\n\nfunction getTypographyStyles(withTypographyStyles: boolean) {\n  if (!withTypographyStyles) {\n    return null;\n  }\n\n  return {\n    '& li > p': {\n      margin: 0,\n    },\n\n    '& ul li, & ol li': {\n      marginTop: rem(2),\n    },\n\n    '& ul, & ol': {\n      marginTop: rem(5),\n      marginBottom: rem(5),\n    },\n\n    '& p': {\n      marginBottom: rem(7),\n    },\n\n    '& h1, & h2, & h3, & h4, & h5, & h6, & p': {\n      marginTop: 0,\n    },\n  };\n}\n\nexport default createStyles(\n  (theme, { withCodeHighlightStyles, withTypographyStyles }: ContentStylesParams) => ({\n    typographyStylesProvider: {\n      ...getTypographyStyles(withTypographyStyles),\n    },\n\n    content: {\n      backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.white,\n      borderRadius: theme.fn.radius(),\n\n      '& .ProseMirror': {\n        outline: 0,\n        padding: theme.spacing.md,\n      },\n\n      '& .ProseMirror > *:last-child': {\n        marginBottom: 0,\n      },\n\n      '& .ProseMirror p.is-editor-empty:first-of-type::before': {\n        content: 'attr(data-placeholder)',\n        pointerEvents: 'none',\n        userSelect: 'none',\n        float: 'left',\n        height: 0,\n        ...theme.fn.placeholderStyles(),\n      },\n\n      ...getCodeHighlight(withCodeHighlightStyles, theme),\n    },\n  })\n);\n", "import React, { forwardRef } from 'react';\nimport {\n  Box,\n  DefaultProps,\n  TypographyStylesProvider,\n  Selectors,\n  useComponentDefaultProps,\n} from '@mantine/core';\nimport { EditorContent } from '@tiptap/react';\nimport { useRichTextEditorContext } from '../RichTextEditor.context';\nimport useStyles from './Content.styles';\n\nexport type ContentStylesNames = Selectors<typeof useStyles>;\n\nexport interface RichTextEditorContentProps\n  extends DefaultProps,\n    React.ComponentPropsWithoutRef<'div'> {}\n\nconst defaultProps: Partial<RichTextEditorContentProps> = {};\n\nexport const Content = forwardRef<HTMLDivElement, RichTextEditorContentProps>((props, ref) => {\n  const { className, ...others } = useComponentDefaultProps(\n    'RichTextEditorContent',\n    defaultProps,\n    props\n  );\n\n  const {\n    editor,\n    withCodeHighlightStyles,\n    withTypographyStyles,\n    classNames,\n    styles,\n    unstyled,\n    variant,\n  } = useRichTextEditorContext();\n\n  const { classes, cx } = useStyles(\n    { withCodeHighlightStyles, withTypographyStyles },\n    { name: 'RichTextEditor', classNames, styles, unstyled, variant }\n  );\n\n  return (\n    <TypographyStylesProvider\n      className={cx(classes.typographyStylesProvider, className)}\n      unstyled={!withTypographyStyles || unstyled}\n      ref={ref}\n    >\n      <Box component={EditorContent} editor={editor} className={classes.content} {...others} />\n    </TypographyStylesProvider>\n  );\n});\n\nContent.displayName = '@mantine/tiptap/Content';\n", "import { createStyles, rem } from '@mantine/core';\n\nexport default createStyles((theme) => {\n  const colors = theme.fn.variant({ variant: 'light' });\n  return {\n    control: {\n      backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.white,\n      minWidth: rem(26),\n      height: rem(26),\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      border: `${rem(1)} solid ${\n        theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.colors.gray[4]\n      }`,\n      borderRadius: theme.fn.radius(),\n      cursor: 'default',\n\n      '&[data-interactive]': {\n        cursor: 'pointer',\n        ...theme.fn.hover({\n          backgroundColor:\n            theme.colorScheme === 'dark' ? theme.colors.dark[5] : theme.colors.gray[0],\n        }),\n      },\n\n      '&[data-active]': {\n        backgroundColor: colors.background,\n        color: colors.color,\n\n        '&:hover': {\n          ...theme.fn.hover({ backgroundColor: colors.hover }),\n        },\n      },\n    },\n  };\n});\n", "import React, { forwardRef } from 'react';\nimport { UnstyledButton, DefaultProps, Selectors, useComponentDefaultProps } from '@mantine/core';\nimport { useRichTextEditorContext } from '../../RichTextEditor.context';\nimport useStyles from './Control.styles';\n\nexport type ControlStylesNames = Selectors<typeof useStyles>;\n\nexport interface PremadeControlProps\n  extends DefaultProps,\n    React.ComponentPropsWithoutRef<'button'> {\n  /** Icon component, should support size prop */\n  icon?: React.FC<{ size: number | string }>;\n}\n\nexport interface RichTextEditorControlProps extends PremadeControlProps {\n  /** Determines whether the control should have active state, false by default */\n  active?: boolean;\n\n  /** Determines whether the control can be interacted with, set false to make the control to act as a label */\n  interactive?: boolean;\n}\n\nconst defaultProps: Partial<RichTextEditorControlProps> = {\n  interactive: true,\n};\n\nexport const Control = forwardRef<HTMLButtonElement, RichTextEditorControlProps>((props, ref) => {\n  const { className, active, children, interactive, ...others } = useComponentDefaultProps(\n    'RichTextEditorControl',\n    defaultProps,\n    props\n  );\n\n  const { classNames, styles, unstyled, variant } = useRichTextEditorContext();\n  const { classes, cx } = useStyles(null, {\n    name: 'RichTextEditor',\n    classNames,\n    styles,\n    unstyled,\n    variant,\n  });\n\n  return (\n    <UnstyledButton\n      className={cx(classes.control, className)}\n      data-rich-text-editor-control\n      tabIndex={interactive ? 0 : -1}\n      data-interactive={interactive || undefined}\n      data-active={active || undefined}\n      aria-pressed={(active && interactive) || undefined}\n      aria-hidden={!interactive || undefined}\n      ref={ref}\n      unstyled={unstyled}\n      {...others}\n    >\n      {children}\n    </UnstyledButton>\n  );\n});\n\nControl.displayName = '@mantine/tiptap/Control';\n", "import { createStyles } from '@mantine/core';\n\nexport default createStyles((theme) => ({\n  controlsGroup: {\n    display: 'flex',\n\n    '& [data-rich-text-editor-control]': {\n      borderRadius: 0,\n\n      '&:not(:last-of-type)': {\n        borderRight: 0,\n      },\n\n      '&:last-of-type': {\n        borderTopRightRadius: theme.fn.radius(),\n        borderBottomRightRadius: theme.fn.radius(),\n      },\n\n      '&:first-of-type': {\n        borderTopLeftRadius: theme.fn.radius(),\n        borderBottomLeftRadius: theme.fn.radius(),\n      },\n    },\n  },\n}));\n", "import React, { forwardRef } from 'react';\nimport { DefaultProps, Box, useComponentDefaultProps, Selectors } from '@mantine/core';\nimport { useRichTextEditorContext } from '../../RichTextEditor.context';\nimport useStyles from './ControlsGroup.styles';\n\nexport type ControlsGroupStylesNames = Selectors<typeof useStyles>;\n\nexport interface RichTextEditorControlsGroupProps\n  extends DefaultProps,\n    React.ComponentPropsWithoutRef<'div'> {}\n\nconst defaultProps: Partial<RichTextEditorControlsGroupProps> = {};\n\nexport const ControlsGroup = forwardRef<HTMLDivElement, RichTextEditorControlsGroupProps>(\n  (props, ref) => {\n    const { className, children, ...others } = useComponentDefaultProps(\n      'RichTextEditorControlsGroup',\n      defaultProps,\n      props\n    );\n\n    const { classNames, styles, unstyled } = useRichTextEditorContext();\n    const { classes, cx } = useStyles(null, {\n      name: 'RichTextEditor',\n      classNames,\n      styles,\n      unstyled,\n    });\n\n    return (\n      <Box className={cx(classes.controlsGroup, className)} ref={ref} {...others}>\n        {children}\n      </Box>\n    );\n  }\n);\n\nControlsGroup.displayName = '@mantine/tiptap/ControlsGroup';\n", "import { createStyles, rem } from '@mantine/core';\n\nexport interface ToolbarStylesParams {\n  sticky: boolean;\n  stickyOffset: React.CSSProperties['top'];\n}\n\nexport default createStyles((theme, { sticky, stickyOffset }: ToolbarStylesParams) => ({\n  toolbar: {\n    position: sticky ? 'sticky' : 'static',\n    top: sticky ? rem(stickyOffset) : undefined,\n    padding: `${theme.spacing.xs} ${theme.spacing.md}`,\n    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.white,\n    zIndex: 1,\n    borderTopRightRadius: theme.fn.radius(),\n    borderTopLeftRadius: theme.fn.radius(),\n    borderBottom: `${rem(1)} solid ${\n      theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.colors.gray[4]\n    }`,\n  },\n}));\n", "import React, { forwardRef } from 'react';\nimport { Group, DefaultProps, useComponentDefaultProps, Selectors } from '@mantine/core';\nimport { useRichTextEditorContext } from '../RichTextEditor.context';\nimport useStyles from './Toolbar.styles';\n\nexport type ToolbarStylesNames = Selectors<typeof useStyles>;\n\nexport interface RichTextEditorToolbarProps\n  extends DefaultProps,\n    React.ComponentPropsWithoutRef<'div'> {\n  /** Determines whether position: sticky styles should be added to the toolbar, false by default */\n  sticky?: boolean;\n\n  /** Sets top style to offset elements with fixed position, 0 by default */\n  stickyOffset?: React.CSSProperties['top'];\n}\n\nconst defaultProps: Partial<RichTextEditorToolbarProps> = {\n  stickyOffset: 0,\n};\n\nexport const Toolbar = forwardRef<HTMLDivElement, RichTextEditorToolbarProps>((props, ref) => {\n  const { className, children, sticky, stickyOffset, ...others } = useComponentDefaultProps(\n    'RichTextEditorToolbar',\n    defaultProps,\n    props\n  );\n\n  const ctx = useRichTextEditorContext();\n  const { classes, cx } = useStyles(\n    { sticky, stickyOffset },\n    {\n      name: 'RichTextEditor',\n      classNames: ctx.classNames,\n      styles: ctx.styles,\n      unstyled: ctx.unstyled,\n      variant: ctx.variant,\n    }\n  );\n\n  return (\n    <Group className={cx(classes.toolbar, className)} ref={ref} {...others}>\n      {children}\n    </Group>\n  );\n});\n\nToolbar.displayName = '@mantine/tiptap/Toolbar';\n", "export interface RichTextEditorLabels {\n  /** RichTextEditor.Bold control aria-label */\n  boldControlLabel: string;\n\n  /** RichTextEditor.Hr control aria-label */\n  hrControlLabel: string;\n\n  /** RichTextEditor.Italic control aria-label */\n  italicControlLabel: string;\n\n  /** RichTextEditor.Underline control aria-label */\n  underlineControlLabel: string;\n\n  /** RichTextEditor.Strike control aria-label */\n  strikeControlLabel: string;\n\n  /** RichTextEditor.ClearFormatting control aria-label */\n  clearFormattingControlLabel: string;\n\n  /** RichTextEditor.Link control aria-label */\n  linkControlLabel: string;\n\n  /** RichTextEditor.Unlink control aria-label */\n  unlinkControlLabel: string;\n\n  /** RichTextEditor.BulletList control aria-label */\n  bulletListControlLabel: string;\n\n  /** RichTextEditor.OrderedList control aria-label */\n  orderedListControlLabel: string;\n\n  /** RichTextEditor.H1 control aria-label */\n  h1ControlLabel: string;\n\n  /** RichTextEditor.H2 control aria-label */\n  h2ControlLabel: string;\n\n  /** RichTextEditor.H3 control aria-label */\n  h3ControlLabel: string;\n\n  /** RichTextEditor.H4 control aria-label */\n  h4ControlLabel: string;\n\n  /** RichTextEditor.H5 control aria-label */\n  h5ControlLabel: string;\n\n  /** RichTextEditor.H6 control aria-label */\n  h6ControlLabel: string;\n\n  /** RichTextEditor.Blockquote control aria-label */\n  blockquoteControlLabel: string;\n\n  /** RichTextEditor.AlignLeft control aria-label */\n  alignLeftControlLabel: string;\n\n  /** RichTextEditor.AlignCenter control aria-label */\n  alignCenterControlLabel: string;\n\n  /** RichTextEditor.AlignRight control aria-label */\n  alignRightControlLabel: string;\n\n  /** RichTextEditor.AlignJustify control aria-label */\n  alignJustifyControlLabel: string;\n\n  /** RichTextEditor.Code control aria-label */\n  codeControlLabel: string;\n\n  /** RichTextEditor.CodeBlock control aria-label */\n  codeBlockControlLabel: string;\n\n  /** RichTextEditor.Subscript control aria-label */\n  subscriptControlLabel: string;\n\n  /** RichTextEditor.Superscript control aria-label */\n  superscriptControlLabel: string;\n\n  /** RichTextEditor.ColorPicker control aria-label */\n  colorPickerControlLabel: string;\n\n  /** RichTextEditor.UnsetColor control aria-label */\n  unsetColorControlLabel: string;\n\n  /** RichTextEditor.Highlight control aria-label */\n  highlightControlLabel: string;\n\n  /** A function go get RichTextEditor.Color control aria-label based on color that control applies */\n  colorControlLabel(color: string): string;\n\n  /** aria-label for link editor url input */\n  linkEditorInputLabel: string;\n\n  /** placeholder for link editor url input */\n  linkEditorInputPlaceholder: string;\n\n  /** Content of external button tooltip in link editor when the link was chosen to open in a new tab */\n  linkEditorExternalLink: string;\n\n  /** Content of external button tooltip in link editor when the link was chosen to open in the same tab */\n  linkEditorInternalLink: string;\n\n  /** Save button content in link editor */\n  linkEditorSave: string;\n\n  /** Cancel button title text in color picker control */\n  colorPickerCancel: string;\n\n  /** Clear button title text in color picker control */\n  colorPickerClear: string;\n\n  /** Color picker button title text in color picker control */\n  colorPickerColorPicker: string;\n\n  /** Palette button title text in color picker control */\n  colorPickerPalette: string;\n\n  /** Save button title text in color picker control */\n  colorPickerSave: string;\n\n  /** aria-label for color palette colors */\n  colorPickerColorLabel(color: string): string;\n}\n\nexport const DEFAULT_LABELS: RichTextEditorLabels = {\n  // Controls labels\n  linkControlLabel: 'Link',\n  colorPickerControlLabel: 'Text color',\n  highlightControlLabel: 'Highlight text',\n  colorControlLabel: (color) => `Set text color ${color}`,\n  boldControlLabel: 'Bold',\n  italicControlLabel: 'Italic',\n  underlineControlLabel: 'Underline',\n  strikeControlLabel: 'Strikethrough',\n  clearFormattingControlLabel: 'Clear formatting',\n  unlinkControlLabel: 'Remove link',\n  bulletListControlLabel: 'Bullet list',\n  orderedListControlLabel: 'Ordered list',\n  h1ControlLabel: 'Heading 1',\n  h2ControlLabel: 'Heading 2',\n  h3ControlLabel: 'Heading 3',\n  h4ControlLabel: 'Heading 4',\n  h5ControlLabel: 'Heading 5',\n  h6ControlLabel: 'Heading 6',\n  blockquoteControlLabel: 'Blockquote',\n  alignLeftControlLabel: 'Align text: left',\n  alignCenterControlLabel: 'Align text: center',\n  alignRightControlLabel: 'Align text: right',\n  alignJustifyControlLabel: 'Align text: justify',\n  codeControlLabel: 'Code',\n  codeBlockControlLabel: 'Code block',\n  subscriptControlLabel: 'Subscript',\n  superscriptControlLabel: 'Superscript',\n  unsetColorControlLabel: 'Unset color',\n  hrControlLabel: 'Horizontal line',\n\n  // Link editor\n  linkEditorInputLabel: 'Enter URL',\n  linkEditorInputPlaceholder: 'https://example.com/',\n  linkEditorExternalLink: 'Open link in a new tab',\n  linkEditorInternalLink: 'Open link in the same tab',\n  linkEditorSave: 'Save',\n\n  // Color picker control\n  colorPickerCancel: 'Cancel',\n  colorPickerClear: 'Clear color',\n  colorPickerColorPicker: 'Color picker',\n  colorPickerPalette: 'Color palette',\n  colorPickerSave: 'Save',\n  colorPickerColorLabel: (color) => `Set text color ${color}`,\n};\n", "import { createStyles, rem } from '@mantine/core';\n\nexport default createStyles((theme) => ({\n  root: {\n    position: 'relative',\n    border: `${rem(1)} solid ${\n      theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.colors.gray[4]\n    }`,\n    borderRadius: theme.fn.radius(),\n  },\n}));\n", "import React, { forwardRef } from 'react';\nimport { Control, RichTextEditorControlProps } from '../Control/Control';\n\nexport interface RichTextEditorControlBaseProps extends RichTextEditorControlProps {\n  icon: React.FC<{ size: number | string }>;\n}\n\nexport const ControlBase = forwardRef<HTMLButtonElement, RichTextEditorControlBaseProps>(\n  ({ className, active, icon: Icon, ...others }, ref) => (\n    <Control active={active} ref={ref} {...others}>\n      <Icon size=\"1rem\" />\n    </Control>\n  )\n);\n\nControlBase.displayName = '@mantine/tiptap/ControlBase';\n", "import React, { forwardRef } from 'react';\nimport { useRichTextEditorContext } from '../../RichTextEditor.context';\nimport { RichTextEditorLabels } from '../../labels';\nimport { PremadeControlProps } from '../Control/Control';\nimport { ControlBase } from './ControlBase';\n\ninterface CreateControlProps {\n  label: keyof RichTextEditorLabels;\n  icon: React.FC<{ size: number }>;\n  isActive?: { name: string; attributes?: Record<string, any> | string };\n  operation: { name: string; attributes?: Record<string, any> | string };\n}\n\nexport function createControl({ label, isActive, operation, icon }: CreateControlProps) {\n  return forwardRef<HTMLButtonElement, PremadeControlProps>((props, ref) => {\n    const { editor, labels } = useRichTextEditorContext();\n    const _label = labels[label] as string;\n    return (\n      <ControlBase\n        aria-label={_label}\n        title={_label}\n        active={isActive?.name ? editor?.isActive(isActive.name, isActive.attributes) : false}\n        ref={ref}\n        onClick={() => editor?.chain().focus()[operation.name](operation.attributes).run()}\n        icon={icon}\n        {...props}\n      />\n    );\n  });\n}\n", "import React from 'react';\nimport {\n  IconBold,\n  IconItalic,\n  IconUnderline,\n  IconStrikethrough,\n  IconClearFormatting,\n  IconH1,\n  IconH2,\n  IconH3,\n  IconH4,\n  IconH5,\n  IconH6,\n  IconList,\n  IconListNumbers,\n  IconUnlink,\n  IconBlockquote,\n  IconAlignLeft,\n  IconAlignRight,\n  IconAlignCenter,\n  IconAlignJustified,\n  IconSubscript,\n  IconSuperscript,\n  IconCode,\n  IconHighlight,\n  IconLineDashed,\n  IconCircleOff,\n} from '@tabler/icons-react';\nimport { createControl } from './ControlBase/create-control';\n\nexport const BoldControl = createControl({\n  label: 'boldControlLabel',\n  icon: (props) => <IconBold {...props} stroke={1.5} />,\n  isActive: { name: 'bold' },\n  operation: { name: 'toggleBold' },\n});\n\nexport const ItalicControl = createControl({\n  label: 'italicControlLabel',\n  icon: (props) => <IconItalic {...props} stroke={1.5} />,\n  isActive: { name: 'italic' },\n  operation: { name: 'toggleItalic' },\n});\n\nexport const UnderlineControl = createControl({\n  label: 'underlineControlLabel',\n  icon: (props) => <IconUnderline {...props} stroke={1.5} />,\n  isActive: { name: 'underline' },\n  operation: { name: 'toggleUnderline' },\n});\n\nexport const StrikeThroughControl = createControl({\n  label: 'strikeControlLabel',\n  icon: (props) => <IconStrikethrough {...props} stroke={1.5} />,\n  isActive: { name: 'strike' },\n  operation: { name: 'toggleStrike' },\n});\n\nexport const ClearFormattingControl = createControl({\n  label: 'clearFormattingControlLabel',\n  icon: (props) => <IconClearFormatting {...props} stroke={1.5} />,\n  operation: { name: 'unsetAllMarks' },\n});\n\nexport const UnlinkControl = createControl({\n  label: 'unlinkControlLabel',\n  icon: (props) => <IconUnlink {...props} stroke={1.5} />,\n  operation: { name: 'unsetLink' },\n});\n\nexport const BulletListControl = createControl({\n  label: 'bulletListControlLabel',\n  icon: (props) => <IconList {...props} stroke={1.5} />,\n  isActive: { name: 'bulletList' },\n  operation: { name: 'toggleBulletList' },\n});\n\nexport const OrderedListControl = createControl({\n  label: 'orderedListControlLabel',\n  icon: (props) => <IconListNumbers {...props} stroke={1.5} />,\n  isActive: { name: 'orderedList' },\n  operation: { name: 'toggleOrderedList' },\n});\n\nexport const H1Control = createControl({\n  label: 'h1ControlLabel',\n  icon: (props) => <IconH1 {...props} stroke={1.5} />,\n  isActive: { name: 'heading', attributes: { level: 1 } },\n  operation: { name: 'toggleHeading', attributes: { level: 1 } },\n});\n\nexport const H2Control = createControl({\n  label: 'h2ControlLabel',\n  icon: (props) => <IconH2 {...props} stroke={1.5} />,\n  isActive: { name: 'heading', attributes: { level: 2 } },\n  operation: { name: 'toggleHeading', attributes: { level: 2 } },\n});\n\nexport const H3Control = createControl({\n  label: 'h3ControlLabel',\n  icon: (props) => <IconH3 {...props} stroke={1.5} />,\n  isActive: { name: 'heading', attributes: { level: 3 } },\n  operation: { name: 'toggleHeading', attributes: { level: 3 } },\n});\n\nexport const H4Control = createControl({\n  label: 'h4ControlLabel',\n  icon: (props) => <IconH4 {...props} stroke={1.5} />,\n  isActive: { name: 'heading', attributes: { level: 4 } },\n  operation: { name: 'toggleHeading', attributes: { level: 4 } },\n});\n\nexport const H5Control = createControl({\n  label: 'h5ControlLabel',\n  icon: (props) => <IconH5 {...props} stroke={1.5} />,\n  isActive: { name: 'heading', attributes: { level: 5 } },\n  operation: { name: 'toggleHeading', attributes: { level: 5 } },\n});\n\nexport const H6Control = createControl({\n  label: 'h6ControlLabel',\n  icon: (props) => <IconH6 {...props} stroke={1.5} />,\n  isActive: { name: 'heading', attributes: { level: 6 } },\n  operation: { name: 'toggleHeading', attributes: { level: 6 } },\n});\n\nexport const BlockquoteControl = createControl({\n  label: 'blockquoteControlLabel',\n  icon: (props) => <IconBlockquote {...props} stroke={1.5} />,\n  isActive: { name: 'blockquote' },\n  operation: { name: 'toggleBlockquote' },\n});\n\nexport const AlignLeftControl = createControl({\n  label: 'alignLeftControlLabel',\n  icon: (props) => <IconAlignLeft {...props} stroke={1.5} />,\n  operation: { name: 'setTextAlign', attributes: 'left' },\n});\n\nexport const AlignRightControl = createControl({\n  label: 'alignRightControlLabel',\n  icon: (props) => <IconAlignRight {...props} stroke={1.5} />,\n  operation: { name: 'setTextAlign', attributes: 'right' },\n});\n\nexport const AlignCenterControl = createControl({\n  label: 'alignCenterControlLabel',\n  icon: (props) => <IconAlignCenter {...props} stroke={1.5} />,\n  operation: { name: 'setTextAlign', attributes: 'center' },\n});\n\nexport const AlignJustifyControl = createControl({\n  label: 'alignJustifyControlLabel',\n  icon: (props) => <IconAlignJustified {...props} stroke={1.5} />,\n  operation: { name: 'setTextAlign', attributes: 'justify' },\n});\n\nexport const SubscriptControl = createControl({\n  label: 'subscriptControlLabel',\n  icon: (props) => <IconSubscript {...props} stroke={1.5} />,\n  isActive: { name: 'subscript' },\n  operation: { name: 'toggleSubscript' },\n});\n\nexport const SuperscriptControl = createControl({\n  label: 'superscriptControlLabel',\n  icon: (props) => <IconSuperscript {...props} stroke={1.5} />,\n  isActive: { name: 'superscript' },\n  operation: { name: 'toggleSuperscript' },\n});\n\nexport const CodeControl = createControl({\n  label: 'codeControlLabel',\n  icon: (props) => <IconCode {...props} stroke={1.5} />,\n  isActive: { name: 'code' },\n  operation: { name: 'toggleCode' },\n});\n\nexport const CodeBlockControl = createControl({\n  label: 'codeBlockControlLabel',\n  icon: (props) => <IconCode {...props} stroke={1.5} />,\n  isActive: { name: 'codeBlock' },\n  operation: { name: 'toggleCodeBlock' },\n});\n\nexport const HighlightControl = createControl({\n  label: 'highlightControlLabel',\n  icon: (props) => <IconHighlight {...props} stroke={1.5} />,\n  isActive: { name: 'highlight' },\n  operation: { name: 'toggleHighlight' },\n});\n\nexport const HrControl = createControl({\n  label: 'hrControlLabel',\n  icon: (props) => <IconLineDashed {...props} stroke={1.5} />,\n  operation: { name: 'setHorizontalRule' },\n});\n\nexport const UnsetColorControl = createControl({\n  label: 'unsetColorControlLabel',\n  icon: (props) => <IconCircleOff {...props} stroke={1.5} />,\n  operation: { name: 'unsetColor' },\n});\n", "import { createStyles, rem } from '@mantine/core';\n\nexport default createStyles((theme) => {\n  const colors = theme.fn.variant({ variant: 'light' });\n  return {\n    linkEditor: {\n      display: 'flex',\n    },\n\n    linkEditorInput: {\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0,\n      borderRight: 0,\n    },\n\n    linkEditorExternalControl: {\n      backgroundColor:\n        theme.colorScheme === 'dark' ? theme.fn.rgba(theme.colors.dark[7], 0.5) : theme.white,\n      border: `${rem(1)} solid ${\n        theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.colors.gray[4]\n      }`,\n      height: rem(24),\n      width: rem(24),\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      borderRadius: theme.fn.radius(),\n\n      '&[data-active]': {\n        backgroundColor: colors.background,\n        borderColor: colors.border,\n        color: colors.color,\n        ...theme.fn.hover({ background: colors.hover }),\n      },\n    },\n\n    linkEditorSave: {\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0,\n    },\n  };\n});\n", "import React, { forwardRef, useState } from 'react';\nimport { IconLink, IconExternalLink } from '@tabler/icons-react';\nimport {\n  Popover,\n  TextInput,\n  Button,\n  UnstyledButton,\n  Tooltip,\n  PopoverProps,\n  Selectors,\n  useComponentDefaultProps,\n  rem,\n} from '@mantine/core';\nimport { useDisclosure, useInputState, useWindowEvent } from '@mantine/hooks';\nimport { ControlBase, RichTextEditorControlBaseProps } from '../ControlBase/ControlBase';\nimport { useRichTextEditorContext } from '../../RichTextEditor.context';\nimport useStyles from './LinkControl.styles';\n\nexport type LinkControlStylesNames = Selectors<typeof useStyles>;\n\nexport interface RichTextEditorLinkControlProps extends Partial<RichTextEditorControlBaseProps> {\n  /** Props added to Popover component */\n  popoverProps?: Partial<PopoverProps>;\n\n  /** Determines whether external link control tooltip should be disabled */\n  disableTooltips?: boolean;\n}\n\nconst LinkIcon: RichTextEditorControlBaseProps['icon'] = ({ size, ...others }) => (\n  <IconLink size={size} stroke={1.5} {...others} />\n);\n\nconst defaultProps: Partial<RichTextEditorLinkControlProps> = {};\n\nexport const LinkControl = forwardRef<HTMLButtonElement, RichTextEditorLinkControlProps>(\n  (props, ref) => {\n    const { icon, popoverProps, disableTooltips, ...others } = useComponentDefaultProps(\n      'RichTextEditorLinkControl',\n      defaultProps,\n      props\n    );\n\n    const { editor, labels, classNames, styles, unstyled, variant } = useRichTextEditorContext();\n    const { classes } = useStyles(null, {\n      name: 'RichTextEditor',\n      classNames,\n      styles,\n      unstyled,\n      variant,\n    });\n\n    const [url, setUrl] = useInputState('');\n    const [external, setExternal] = useState(false);\n    const [opened, { open, close }] = useDisclosure(false);\n\n    const handleOpen = () => {\n      open();\n      const linkData = editor?.getAttributes('link');\n      setUrl(linkData?.href || '');\n      setExternal(linkData?.target === '_blank');\n    };\n\n    const handleClose = () => {\n      close();\n      setUrl('');\n      setExternal(false);\n    };\n\n    const setLink = () => {\n      handleClose();\n      url === ''\n        ? editor.chain().focus().extendMarkRange('link').unsetLink().run()\n        : editor\n            .chain()\n            .focus()\n            .extendMarkRange('link')\n            .setLink({ href: url, target: external ? '_blank' : null })\n            .run();\n    };\n\n    const handleInputKeydown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        event.preventDefault();\n        setLink();\n      }\n    };\n\n    useWindowEvent('edit-link', handleOpen, false);\n\n    return (\n      <Popover\n        trapFocus\n        shadow=\"md\"\n        withinPortal\n        opened={opened}\n        onClose={handleClose}\n        offset={-44}\n        zIndex={10000}\n        unstyled={unstyled}\n        {...popoverProps}\n      >\n        <Popover.Target>\n          <ControlBase\n            icon={icon || LinkIcon}\n            aria-label={labels.linkControlLabel}\n            title={labels.linkControlLabel}\n            onClick={handleOpen}\n            active={editor?.isActive('link')}\n            unstyled={unstyled}\n            {...others}\n            ref={ref}\n          />\n        </Popover.Target>\n\n        <Popover.Dropdown\n          sx={(theme) => ({\n            backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.white,\n          })}\n        >\n          <div className={classes.linkEditor}>\n            <TextInput\n              placeholder={labels.linkEditorInputPlaceholder}\n              aria-label={labels.linkEditorInputLabel}\n              type=\"url\"\n              value={url}\n              onChange={setUrl}\n              classNames={{ input: classes.linkEditorInput }}\n              onKeyDown={handleInputKeydown}\n              unstyled={unstyled}\n              rightSection={\n                <Tooltip\n                  label={external ? labels.linkEditorExternalLink : labels.linkEditorInternalLink}\n                  events={{ hover: true, focus: true, touch: true }}\n                  withinPortal\n                  withArrow\n                  disabled={disableTooltips}\n                  unstyled={unstyled}\n                  zIndex={10000}\n                >\n                  <UnstyledButton\n                    onClick={() => setExternal((e) => !e)}\n                    data-active={external || undefined}\n                    className={classes.linkEditorExternalControl}\n                    unstyled={unstyled}\n                  >\n                    <IconExternalLink size={rem(14)} stroke={1.5} />\n                  </UnstyledButton>\n                </Tooltip>\n              }\n            />\n\n            <Button\n              variant=\"default\"\n              onClick={setLink}\n              className={classes.linkEditorSave}\n              unstyled={unstyled}\n            >\n              {labels.linkEditorSave}\n            </Button>\n          </div>\n        </Popover.Dropdown>\n      </Popover>\n    );\n  }\n);\n", "import React, { forwardRef, useState } from 'react';\nimport {\n  DefaultProps,\n  Popover,\n  PopoverProps,\n  ColorSwatch,\n  SimpleGrid,\n  ColorPicker,\n  Group,\n  ActionIcon,\n  Tooltip,\n  ColorPickerProps,\n  useComponentDefaultProps,\n} from '@mantine/core';\nimport { useDisclosure } from '@mantine/hooks';\nimport { IconCircleOff, IconColorPicker, IconX, IconPalette, IconCheck } from '@tabler/icons-react';\nimport { Control } from '../Control/Control';\nimport { useRichTextEditorContext } from '../../RichTextEditor.context';\n\nexport interface ColorPickerControlProps\n  extends DefaultProps,\n    React.ComponentPropsWithoutRef<'button'> {\n  /** Props added to Popover component */\n  popoverProps?: Partial<PopoverProps>;\n\n  /** Props added to ColorPicker component */\n  colorPickerProps?: Partial<ColorPickerProps>;\n\n  /** List of colors that the user can choose from */\n  colors: string[];\n}\n\nconst defaultProps: Partial<ColorPickerControlProps> = {};\n\nexport const ColorPickerControl = forwardRef<HTMLButtonElement, ColorPickerControlProps>(\n  (props, ref) => {\n    const { popoverProps, colors, colorPickerProps, ...others } = useComponentDefaultProps(\n      'RichTextEditorColorPickerControl',\n      defaultProps,\n      props\n    );\n\n    const { editor, labels, unstyled } = useRichTextEditorContext();\n    const [opened, { toggle, close }] = useDisclosure(false);\n    const [state, setState] = useState<'palette' | 'colorPicker'>('palette');\n    const currentColor = editor?.getAttributes('textStyle').color || '#000';\n\n    const handleChange = (value: string, shouldClose = true) => {\n      (editor.chain() as any).focus().setColor(value).run();\n      shouldClose && close();\n    };\n\n    const handleClear = () => {\n      (editor.chain() as any).focus().unsetColor().run();\n      close();\n    };\n\n    const controls = colors.map((color, index) => (\n      <ColorSwatch\n        key={index}\n        component=\"button\"\n        color={color}\n        onClick={() => handleChange(color)}\n        size={26}\n        radius=\"xs\"\n        sx={{ cursor: 'pointer' }}\n        title={labels.colorPickerColorLabel(color)}\n        aria-label={labels.colorPickerColorLabel(color)}\n        unstyled={unstyled}\n      />\n    ));\n\n    return (\n      <Popover\n        opened={opened}\n        withinPortal\n        trapFocus\n        onClose={close}\n        unstyled={unstyled}\n        {...popoverProps}\n      >\n        <Popover.Target>\n          <Control\n            aria-label={labels.colorPickerControlLabel}\n            title={labels.colorPickerControlLabel}\n            {...others}\n            ref={ref}\n            onClick={toggle}\n          >\n            <ColorSwatch color={currentColor} size={14} unstyled={unstyled} />\n          </Control>\n        </Popover.Target>\n\n        <Popover.Dropdown\n          sx={(theme) => ({\n            backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.white,\n          })}\n        >\n          {state === 'palette' && (\n            <SimpleGrid cols={7} spacing={2}>\n              {controls}\n            </SimpleGrid>\n          )}\n\n          {state === 'colorPicker' && (\n            <ColorPicker\n              defaultValue={currentColor}\n              onChange={(value) => handleChange(value, false)}\n              unstyled={unstyled}\n              {...colorPickerProps}\n            />\n          )}\n\n          <Tooltip.Group closeDelay={200}>\n            <Group position=\"right\" spacing=\"xs\" mt=\"sm\">\n              {state === 'palette' && (\n                <ActionIcon\n                  variant=\"default\"\n                  onClick={close}\n                  unstyled={unstyled}\n                  title={labels.colorPickerCancel}\n                  aria-label={labels.colorPickerCancel}\n                >\n                  <IconX stroke={1.5} size=\"1rem\" />\n                </ActionIcon>\n              )}\n\n              <ActionIcon\n                variant=\"default\"\n                onClick={handleClear}\n                unstyled={unstyled}\n                title={labels.colorPickerClear}\n                aria-label={labels.colorPickerClear}\n              >\n                <IconCircleOff stroke={1.5} size=\"1rem\" />\n              </ActionIcon>\n\n              {state === 'palette' ? (\n                <ActionIcon\n                  variant=\"default\"\n                  onClick={() => setState('colorPicker')}\n                  unstyled={unstyled}\n                  title={labels.colorPickerColorPicker}\n                  aria-label={labels.colorPickerColorPicker}\n                >\n                  <IconColorPicker stroke={1.5} size=\"1rem\" />\n                </ActionIcon>\n              ) : (\n                <ActionIcon\n                  variant=\"default\"\n                  onClick={() => setState('palette')}\n                  unstyled={unstyled}\n                  aria-label={labels.colorPickerPalette}\n                  title={labels.colorPickerPalette}\n                >\n                  <IconPalette stroke={1.5} size=\"1rem\" />\n                </ActionIcon>\n              )}\n\n              {state === 'colorPicker' && (\n                <ActionIcon\n                  variant=\"default\"\n                  onClick={close}\n                  unstyled={unstyled}\n                  title={labels.colorPickerSave}\n                  aria-label={labels.colorPickerSave}\n                >\n                  <IconCheck stroke={1.5} size=\"1rem\" />\n                </ActionIcon>\n              )}\n            </Group>\n          </Tooltip.Group>\n        </Popover.Dropdown>\n      </Popover>\n    );\n  }\n);\n\nColorPickerControl.displayName = '@mantine/tiptap/ColorPickerControl';\n", "import React, { forwardRef } from 'react';\nimport { ColorSwatch, DefaultProps, useComponentDefaultProps } from '@mantine/core';\nimport { Control } from '../Control/Control';\nimport { useRichTextEditorContext } from '../../RichTextEditor.context';\n\nexport interface RichTextEditorColorControlProps\n  extends DefaultProps,\n    React.ComponentPropsWithoutRef<'button'> {\n  /** Color that will be set as text color, for example #ef457e */\n  color: string;\n}\n\nconst defaultProps: Partial<RichTextEditorColorControlProps> = {};\n\nexport const ColorControl = forwardRef<HTMLButtonElement, RichTextEditorColorControlProps>(\n  (props, ref) => {\n    const { color, ...others } = useComponentDefaultProps(\n      'RichTextEditorColorControl',\n      defaultProps,\n      props\n    );\n    const { editor, labels, unstyled } = useRichTextEditorContext();\n    const currentColor = editor?.getAttributes('textStyle').color || null;\n    const label = labels.colorControlLabel(color);\n\n    return (\n      <Control\n        active={currentColor === color}\n        aria-label={label}\n        title={label}\n        onClick={() => (editor.chain() as any).focus().setColor(color).run()}\n        {...others}\n        ref={ref}\n      >\n        <ColorSwatch color={color} size={14} unstyled={unstyled} />\n      </Control>\n    );\n  }\n);\n", "/* eslint-disable react/no-unused-prop-types */\nimport React, { useMemo, forwardRef } from 'react';\nimport { Box, useComponentDefaultProps, DefaultProps, Selectors } from '@mantine/core';\nimport { Editor } from '@tiptap/react';\nimport { ForwardRefWithStaticComponents } from '@mantine/utils';\nimport { RichTextEditorProvider } from './RichTextEditor.context';\nimport * as controls from './controls';\nimport { Content, ContentStylesNames } from './Content/Content';\nimport { Control, ControlStylesNames } from './controls/Control/Control';\nimport { ControlsGroup, ControlsGroupStylesNames } from './controls/ControlsGroup/ControlsGroup';\nimport { Toolbar, ToolbarStylesNames } from './Toolbar/Toolbar';\nimport { LinkControlStylesNames } from './controls/LinkControl/LinkControl';\nimport { DEFAULT_LABELS, RichTextEditorLabels } from './labels';\nimport useStyles from './RichTextEditor.styles';\n\nexport type RichTextEditorStylesNames =\n  | Selectors<typeof useStyles>\n  | ContentStylesNames\n  | ControlStylesNames\n  | ControlsGroupStylesNames\n  | ToolbarStylesNames\n  | LinkControlStylesNames;\n\nexport interface RichTextEditorProps\n  extends DefaultProps<RichTextEditorStylesNames>,\n    React.ComponentPropsWithoutRef<'div'> {\n  variant?: string;\n\n  /** Tiptap editor instance */\n  editor: Editor | null;\n\n  /** Determines whether code highlight styles should be added, true by default */\n  withCodeHighlightStyles?: boolean;\n\n  /** Determines whether typography styles should be added, true by default */\n  withTypographyStyles?: boolean;\n\n  /** Labels that are used in controls */\n  labels?: Partial<RichTextEditorLabels>;\n\n  /** Child editor components */\n  children: React.ReactNode;\n}\n\nconst defaultProps: Partial<RichTextEditorProps> = {\n  withCodeHighlightStyles: true,\n  withTypographyStyles: true,\n};\n\ntype RichTextEditorComponent = ForwardRefWithStaticComponents<\n  RichTextEditorProps,\n  {\n    Content: typeof Content;\n    Control: typeof Control;\n    ControlsGroup: typeof ControlsGroup;\n    Toolbar: typeof Toolbar;\n    Bold: typeof controls.BoldControl;\n    Italic: typeof controls.ItalicControl;\n    Strikethrough: typeof controls.StrikeThroughControl;\n    Underline: typeof controls.UnderlineControl;\n    ClearFormatting: typeof controls.ClearFormattingControl;\n    H1: typeof controls.H1Control;\n    H2: typeof controls.H2Control;\n    H3: typeof controls.H3Control;\n    H4: typeof controls.H4Control;\n    H5: typeof controls.H5Control;\n    H6: typeof controls.H6Control;\n    BulletList: typeof controls.BulletListControl;\n    OrderedList: typeof controls.OrderedListControl;\n    Link: typeof controls.LinkControl;\n    Unlink: typeof controls.UnlinkControl;\n    Blockquote: typeof controls.BlockquoteControl;\n    AlignLeft: typeof controls.AlignLeftControl;\n    AlignRight: typeof controls.AlignRightControl;\n    AlignCenter: typeof controls.AlignCenterControl;\n    AlignJustify: typeof controls.AlignJustifyControl;\n    Superscript: typeof controls.SuperscriptControl;\n    Subscript: typeof controls.SubscriptControl;\n    Code: typeof controls.CodeControl;\n    CodeBlock: typeof controls.CodeBlockControl;\n    ColorPicker: typeof controls.ColorPickerControl;\n    Color: typeof controls.ColorControl;\n    Highlight: typeof controls.HighlightControl;\n    Hr: typeof controls.HrControl;\n    UnsetColor: typeof controls.UnsetColorControl;\n  }\n>;\n\nexport const RichTextEditor: RichTextEditorComponent = forwardRef<\n  HTMLDivElement,\n  RichTextEditorProps\n>((props, ref) => {\n  const {\n    editor,\n    children,\n    className,\n    labels,\n    withCodeHighlightStyles,\n    withTypographyStyles,\n    classNames,\n    styles,\n    unstyled,\n    variant,\n    ...others\n  } = useComponentDefaultProps('RichTextEditor', defaultProps, props);\n\n  const { classes, cx } = useStyles(null, {\n    name: 'RichTextEditor',\n    classNames,\n    styles,\n    unstyled,\n    variant,\n  });\n\n  const mergedLabels = useMemo(() => ({ ...DEFAULT_LABELS, ...labels }), [labels]);\n\n  return (\n    <RichTextEditorProvider\n      value={{\n        editor,\n        labels: mergedLabels,\n        withCodeHighlightStyles,\n        withTypographyStyles,\n        classNames,\n        styles,\n        unstyled,\n        variant,\n      }}\n    >\n      <Box className={cx(classes.root, className)} {...others} ref={ref}>\n        {children}\n      </Box>\n    </RichTextEditorProvider>\n  );\n}) as any;\n\n// Generic components\nRichTextEditor.Content = Content;\nRichTextEditor.Control = Control;\nRichTextEditor.ControlsGroup = ControlsGroup;\nRichTextEditor.Toolbar = Toolbar;\n\n// Controls components\nRichTextEditor.Bold = controls.BoldControl;\nRichTextEditor.Italic = controls.ItalicControl;\nRichTextEditor.Strikethrough = controls.StrikeThroughControl;\nRichTextEditor.Underline = controls.UnderlineControl;\nRichTextEditor.ClearFormatting = controls.ClearFormattingControl;\nRichTextEditor.H1 = controls.H1Control;\nRichTextEditor.H2 = controls.H2Control;\nRichTextEditor.H3 = controls.H3Control;\nRichTextEditor.H4 = controls.H4Control;\nRichTextEditor.H5 = controls.H5Control;\nRichTextEditor.H6 = controls.H6Control;\nRichTextEditor.BulletList = controls.BulletListControl;\nRichTextEditor.OrderedList = controls.OrderedListControl;\nRichTextEditor.Link = controls.LinkControl;\nRichTextEditor.Unlink = controls.UnlinkControl;\nRichTextEditor.Blockquote = controls.BlockquoteControl;\nRichTextEditor.AlignLeft = controls.AlignLeftControl;\nRichTextEditor.AlignRight = controls.AlignRightControl;\nRichTextEditor.AlignCenter = controls.AlignCenterControl;\nRichTextEditor.AlignJustify = controls.AlignJustifyControl;\nRichTextEditor.Superscript = controls.SuperscriptControl;\nRichTextEditor.Subscript = controls.SubscriptControl;\nRichTextEditor.Code = controls.CodeControl;\nRichTextEditor.CodeBlock = controls.CodeBlockControl;\nRichTextEditor.ColorPicker = controls.ColorPickerControl;\nRichTextEditor.Color = controls.ColorControl;\nRichTextEditor.Highlight = controls.HighlightControl;\nRichTextEditor.Hr = controls.HrControl;\nRichTextEditor.UnsetColor = controls.UnsetColorControl;\n\nRichTextEditor.displayName = '@mantine/tiptap/RichTextEditor';\n", "// THIS FILE IS AUTOMATICALLY GENERATED DO NOT EDIT DIRECTLY\n// See update-tlds.js for encoding/decoding format\n// https://data.iana.org/TLD/tlds-alpha-by-domain.txt\nconst encodedTlds = 'aaa1rp3barth4b0ott3vie4c1le2ogado5udhabi7c0ademy5centure6ountant0s9o1tor4d0s1ult4e0g1ro2tna4f0l1rica5g0akhan5ency5i0g1rbus3force5tel5kdn3l0faromeo7ibaba4pay4lfinanz6state5y2sace3tom5m0azon4ericanexpress7family11x2fam3ica3sterdam8nalytics7droid5quan4z2o0l2partments8p0le4q0uarelle8r0ab1mco4chi3my2pa2t0e3s0da2ia2sociates9t0hleta5torney7u0ction5di0ble3o3spost5thor3o0s4vianca6w0s2x0a2z0ure5ba0by2idu3namex3narepublic11d1k2r0celona5laycard4s5efoot5gains6seball5ketball8uhaus5yern5b0c1t1va3cg1n2d1e0ats2uty4er2ntley5rlin4st0buy5t2f1g1h0arti5i0ble3d1ke2ng0o3o1z2j1lack0friday9ockbuster8g1omberg7ue3m0s1w2n0pparibas9o0ats3ehringer8fa2m1nd2o0k0ing5sch2tik2on4t1utique6x2r0adesco6idgestone9oadway5ker3ther5ussels7s1t1uild0ers6siness6y1zz3v1w1y1z0h3ca0b1fe2l0l1vinklein9m0era3p2non3petown5ital0one8r0avan4ds2e0er0s4s2sa1e1h1ino4t0ering5holic7ba1n1re2s2c1d1enter4o1rn3f0a1d2g1h0anel2nel4rity4se2t2eap3intai5ristmas6ome4urch5i0priani6rcle4sco3tadel4i0c2y0eats7k1l0aims4eaning6ick2nic1que6othing5ud3ub0med6m1n1o0ach3des3ffee4llege4ogne5m0cast4mbank4unity6pany2re3uter5sec4ndos3struction8ulting7tact3ractors9oking0channel11l1p2rsica5untry4pon0s4rses6pa2r0edit0card4union9icket5own3s1uise0s6u0isinella9v1w1x1y0mru3ou3z2dabur3d1nce3ta1e1ing3sun4y2clk3ds2e0al0er2s3gree4livery5l1oitte5ta3mocrat6ntal2ist5si0gn4v2hl2iamonds6et2gital5rect0ory7scount3ver5h2y2j1k1m1np2o0cs1tor4g1mains5t1wnload7rive4tv2ubai3nlop4pont4rban5vag2r2z2earth3t2c0o2deka3u0cation8e1g1mail3erck5nergy4gineer0ing9terprises10pson4quipment8r0icsson6ni3s0q1tate5t0isalat7u0rovision8s2vents5xchange6pert3osed4ress5traspace10fage2il1rwinds6th3mily4n0s2rm0ers5shion4t3edex3edback6rrari3ero6i0at2delity5o2lm2nal1nce1ial7re0stone6mdale6sh0ing5t0ness6j1k1lickr3ghts4r2orist4wers5y2m1o0o0d0network8tball6rd1ex2sale4um3undation8x2r0ee1senius7l1ogans4ntdoor4ier7tr2ujitsu5n0d2rniture7tbol5yi3ga0l0lery3o1up4me0s3p1rden4y2b0iz3d0n2e0a1nt0ing5orge5f1g0ee3h1i0ft0s3ves2ing5l0ass3e1obal2o4m0ail3bh2o1x2n1odaddy5ld0point6f2o0dyear5g0le4p1t1v2p1q1r0ainger5phics5tis4een3ipe3ocery4up4s1t1u0ardian6cci3ge2ide2tars5ru3w1y2hair2mburg5ngout5us3bo2dfc0bank7ealth0care8lp1sinki6re1mes5gtv3iphop4samitsu7tachi5v2k0t2m1n1ockey4ldings5iday5medepot5goods5s0ense7nda3rse3spital5t0ing5t0eles2s3mail5use3w2r1sbc3t1u0ghes5yatt3undai7ibm2cbc2e1u2d1e0ee3fm2kano4l1m0amat4db2mo0bilien9n0c1dustries8finiti5o2g1k1stitute6urance4e4t0ernational10uit4vestments10o1piranga7q1r0ish4s0maili5t0anbul7t0au2v3jaguar4va3cb2e0ep2tzt3welry6io2ll2m0p2nj2o0bs1urg4t1y2p0morgan6rs3uegos4niper7kaufen5ddi3e0rryhotels6logistics9properties14fh2g1h1i0a1ds2m1nder2le4tchen5wi3m1n1oeln3matsu5sher5p0mg2n2r0d1ed3uokgroup8w1y0oto4z2la0caixa5mborghini8er3ncaster5ia3d0rover6xess5salle5t0ino3robe5w0yer5b1c1ds2ease3clerc5frak4gal2o2xus4gbt3i0dl2fe0insurance9style7ghting6ke2lly3mited4o2ncoln4de2k2psy3ve1ing5k1lc1p2oan0s3cker3us3l1ndon4tte1o3ve3pl0financial11r1s1t0d0a3u0ndbeck6xe1ury5v1y2ma0cys3drid4if1son4keup4n0agement7go3p1rket0ing3s4riott5shalls7serati6ttel5ba2c0kinsey7d1e0d0ia3et2lbourne7me1orial6n0u2rckmsd7g1h1iami3crosoft7l1ni1t2t0subishi9k1l0b1s2m0a2n1o0bi0le4da2e1i1m1nash3ey2ster5rmon3tgage6scow4to0rcycles9v0ie4p1q1r1s0d2t0n1r2u0seum3ic3tual5v1w1x1y1z2na0b1goya4me2tura4vy3ba2c1e0c1t0bank4flix4work5ustar5w0s2xt0direct7us4f0l2g0o2hk2i0co2ke1on3nja3ssan1y5l1o0kia3rthwesternmutual14on4w0ruz3tv4p1r0a1w2tt2u1yc2z2obi1server7ffice5kinawa6layan0group9dnavy5lo3m0ega4ne1g1l0ine5oo2pen3racle3nge4g0anic5igins6saka4tsuka4t2vh3pa0ge2nasonic7ris2s1tners4s1y3ssagens7y2ccw3e0t2f0izer5g1h0armacy6d1ilips5one2to0graphy6s4ysio5ics1tet2ures6d1n0g1k2oneer5zza4k1l0ace2y0station9umbing5s3m1n0c2ohl2ker3litie5rn2st3r0america6xi3ess3ime3o0d0uctions8f1gressive8mo2perties3y5tection8u0dential9s1t1ub2w0c2y2qa1pon3uebec3st5racing4dio4e0ad1lestate6tor2y4cipes5d0stone5umbrella9hab3ise0n3t2liance6n0t0als5pair3ort3ublican8st0aurant8view0s5xroth6ich0ardli6oh3l1o1p2o0cher3ks3deo3gers4om3s0vp3u0gby3hr2n2w0e2yukyu6sa0arland6fe0ty4kura4le1on3msclub4ung5ndvik0coromant12ofi4p1rl2s1ve2xo3b0i1s2c0a1b1haeffler7midt4olarships8ol3ule3warz5ience5ot3d1e0arch3t2cure1ity6ek2lect4ner3rvices6ven3w1x0y3fr2g1h0angrila6rp2w2ell3ia1ksha5oes2p0ping5uji3w0time7i0lk2na1gles5te3j1k0i0n2y0pe4l0ing4m0art3ile4n0cf3o0ccer3ial4ftbank4ware6hu2lar2utions7ng1y2y2pa0ce3ort2t3r0l2s1t0ada2ples4r1tebank4farm7c0group6ockholm6rage3e3ream4udio2y3yle4u0cks3pplies3y2ort5rf1gery5zuki5v1watch4iss4x1y0dney4stems6z2tab1ipei4lk2obao4rget4tamotors6r2too4x0i3c0i2d0k2eam2ch0nology8l1masek5nnis4va3f1g1h0d1eater2re6iaa2ckets5enda4ffany5ps2res2ol4j0maxx4x2k0maxx5l1m0all4n1o0day3kyo3ols3p1ray3shiba5tal3urs3wn2yota3s3r0ade1ing4ining5vel0channel7ers0insurance16ust3v2t1ube2i1nes3shu4v0s2w1z2ua1bank3s2g1k1nicom3versity8o2ol2ps2s1y1z2va0cations7na1guard7c1e0gas3ntures6risign5mögensberater2ung14sicherung10t2g1i0ajes4deo3g1king4llas4n1p1rgin4sa1ion4va1o3laanderen9n1odka3lkswagen7vo3te1ing3o2yage5u0elos6wales2mart4ter4ng0gou5tch0es6eather0channel12bcam3er2site5d0ding5ibo2r3f1hoswho6ien2ki2lliamhill9n0dows4e1ners6me2olterskluwer11odside6rk0s2ld3w2s1tc1f3xbox3erox4finity6ihuan4n2xx2yz3yachts4hoo3maxun5ndex5e1odobashi7ga2kohama6u0tube6t1un3za0ppos4ra3ero3ip2m1one3uerich6w2';\n// Internationalized domain names containing non-ASCII\nconst encodedUtlds = 'ελ1υ2бг1ел3дети4ею2католик6ом3мкд2он1сква6онлайн5рг3рус2ф2сайт3рб3укр3қаз3հայ3ישראל5קום3ابوظبي5تصالات6رامكو5لاردن4بحرين5جزائر5سعودية6عليان5مغرب5مارات5یران5بارت2زار4يتك3ھارت5تونس4سودان3رية5شبكة4عراق2ب2مان4فلسطين6قطر3كاثوليك6وم3مصر2ليسيا5وريتانيا7قع4همراه5پاکستان7ڀارت4कॉम3नेट3भारत0म्3ोत5संगठन5বাংলা5ভারত2ৰত4ਭਾਰਤ4ભારત4ଭାରତ4இந்தியா6லங்கை6சிங்கப்பூர்11భారత్5ಭಾರತ4ഭാരതം5ලංකා4คอม3ไทย3ລາວ3გე2みんな3アマゾン4クラウド4グーグル4コム2ストア3セール3ファッション6ポイント4世界2中信1国1國1文网3亚马逊3企业2佛山2信息2健康2八卦2公司1益2台湾1灣2商城1店1标2嘉里0大酒店5在线2大拿2天主教3娱乐2家電2广东2微博2慈善2我爱你3手机2招聘2政务1府2新加坡2闻2时尚2書籍2机构2淡马锡3游戏2澳門2点看2移动2组织机构4网址1店1站1络2联通2谷歌2购物2通販2集团2電訊盈科4飞利浦3食品2餐厅2香格里拉3港2닷넷1컴2삼성2한국2';\n\n/**\n * @template A\n * @template B\n * @param {A} target\n * @param {B} properties\n * @return {A & B}\n */\nconst assign = (target, properties) => {\n  for (const key in properties) {\n    target[key] = properties[key];\n  }\n  return target;\n};\n\n/**\n * Finite State Machine generation utilities\n */\n\n/**\n * @template T\n * @typedef {{ [group: string]: T[] }} Collections\n */\n\n/**\n * @typedef {{ [group: string]: true }} Flags\n */\n\n// Keys in scanner Collections instances\nconst numeric = 'numeric';\nconst ascii = 'ascii';\nconst alpha = 'alpha';\nconst asciinumeric = 'asciinumeric';\nconst alphanumeric = 'alphanumeric';\nconst domain = 'domain';\nconst emoji = 'emoji';\nconst scheme = 'scheme';\nconst slashscheme = 'slashscheme';\nconst whitespace = 'whitespace';\n\n/**\n * @template T\n * @param {string} name\n * @param {Collections<T>} groups to register in\n * @returns {T[]} Current list of tokens in the given collection\n */\nfunction registerGroup(name, groups) {\n  if (!(name in groups)) {\n    groups[name] = [];\n  }\n  return groups[name];\n}\n\n/**\n * @template T\n * @param {T} t token to add\n * @param {Collections<T>} groups\n * @param {Flags} flags\n */\nfunction addToGroups(t, flags, groups) {\n  if (flags[numeric]) {\n    flags[asciinumeric] = true;\n    flags[alphanumeric] = true;\n  }\n  if (flags[ascii]) {\n    flags[asciinumeric] = true;\n    flags[alpha] = true;\n  }\n  if (flags[asciinumeric]) {\n    flags[alphanumeric] = true;\n  }\n  if (flags[alpha]) {\n    flags[alphanumeric] = true;\n  }\n  if (flags[alphanumeric]) {\n    flags[domain] = true;\n  }\n  if (flags[emoji]) {\n    flags[domain] = true;\n  }\n  for (const k in flags) {\n    const group = registerGroup(k, groups);\n    if (group.indexOf(t) < 0) {\n      group.push(t);\n    }\n  }\n}\n\n/**\n * @template T\n * @param {T} t token to check\n * @param {Collections<T>} groups\n * @returns {Flags} group flags that contain this token\n */\nfunction flagsForToken(t, groups) {\n  const result = {};\n  for (const c in groups) {\n    if (groups[c].indexOf(t) >= 0) {\n      result[c] = true;\n    }\n  }\n  return result;\n}\n\n/**\n * @template T\n * @typedef {null | T } Transition\n */\n\n/**\n * Define a basic state machine state. j is the list of character transitions,\n * jr is the list of regex-match transitions, jd is the default state to\n * transition to t is the accepting token type, if any. If this is the terminal\n * state, then it does not emit a token.\n *\n * The template type T represents the type of the token this state accepts. This\n * should be a string (such as of the token exports in `text.js`) or a\n * MultiToken subclass (from `multi.js`)\n *\n * @template T\n * @param {T} [token] Token that this state emits\n */\nfunction State(token) {\n  if (token === void 0) {\n    token = null;\n  }\n  // this.n = null; // DEBUG: State name\n  /** @type {{ [input: string]: State<T> }} j */\n  this.j = {}; // IMPLEMENTATION 1\n  // this.j = []; // IMPLEMENTATION 2\n  /** @type {[RegExp, State<T>][]} jr */\n  this.jr = [];\n  /** @type {?State<T>} jd */\n  this.jd = null;\n  /** @type {?T} t */\n  this.t = token;\n}\n\n/**\n * Scanner token groups\n * @type Collections<string>\n */\nState.groups = {};\nState.prototype = {\n  accepts() {\n    return !!this.t;\n  },\n  /**\n   * Follow an existing transition from the given input to the next state.\n   * Does not mutate.\n   * @param {string} input character or token type to transition on\n   * @returns {?State<T>} the next state, if any\n   */\n  go(input) {\n    const state = this;\n    const nextState = state.j[input];\n    if (nextState) {\n      return nextState;\n    }\n    for (let i = 0; i < state.jr.length; i++) {\n      const regex = state.jr[i][0];\n      const nextState = state.jr[i][1]; // note: might be empty to prevent default jump\n      if (nextState && regex.test(input)) {\n        return nextState;\n      }\n    }\n    // Nowhere left to jump! Return default, if any\n    return state.jd;\n  },\n  /**\n   * Whether the state has a transition for the given input. Set the second\n   * argument to true to only look for an exact match (and not a default or\n   * regular-expression-based transition)\n   * @param {string} input\n   * @param {boolean} exactOnly\n   */\n  has(input, exactOnly) {\n    if (exactOnly === void 0) {\n      exactOnly = false;\n    }\n    return exactOnly ? input in this.j : !!this.go(input);\n  },\n  /**\n   * Short for \"transition all\"; create a transition from the array of items\n   * in the given list to the same final resulting state.\n   * @param {string | string[]} inputs Group of inputs to transition on\n   * @param {Transition<T> | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   */\n  ta(inputs, next, flags, groups) {\n    for (let i = 0; i < inputs.length; i++) {\n      this.tt(inputs[i], next, flags, groups);\n    }\n  },\n  /**\n   * Short for \"take regexp transition\"; defines a transition for this state\n   * when it encounters a token which matches the given regular expression\n   * @param {RegExp} regexp Regular expression transition (populate first)\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   * @returns {State<T>} taken after the given input\n   */\n  tr(regexp, next, flags, groups) {\n    groups = groups || State.groups;\n    let nextState;\n    if (next && next.j) {\n      nextState = next;\n    } else {\n      // Token with maybe token groups\n      nextState = new State(next);\n      if (flags && groups) {\n        addToGroups(next, flags, groups);\n      }\n    }\n    this.jr.push([regexp, nextState]);\n    return nextState;\n  },\n  /**\n   * Short for \"take transitions\", will take as many sequential transitions as\n   * the length of the given input and returns the\n   * resulting final state.\n   * @param {string | string[]} input\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of token groups\n   * @returns {State<T>} taken after the given input\n   */\n  ts(input, next, flags, groups) {\n    let state = this;\n    const len = input.length;\n    if (!len) {\n      return state;\n    }\n    for (let i = 0; i < len - 1; i++) {\n      state = state.tt(input[i]);\n    }\n    return state.tt(input[len - 1], next, flags, groups);\n  },\n  /**\n   * Short for \"take transition\", this is a method for building/working with\n   * state machines.\n   *\n   * If a state already exists for the given input, returns it.\n   *\n   * If a token is specified, that state will emit that token when reached by\n   * the linkify engine.\n   *\n   * If no state exists, it will be initialized with some default transitions\n   * that resemble existing default transitions.\n   *\n   * If a state is given for the second argument, that state will be\n   * transitioned to on the given input regardless of what that input\n   * previously did.\n   *\n   * Specify a token group flags to define groups that this token belongs to.\n   * The token will be added to corresponding entires in the given groups\n   * object.\n   *\n   * @param {string} input character, token type to transition on\n   * @param {T | State<T>} [next] Transition options\n   * @param {Flags} [flags] Collections flags to add token to\n   * @param {Collections<T>} [groups] Master list of groups\n   * @returns {State<T>} taken after the given input\n   */\n  tt(input, next, flags, groups) {\n    groups = groups || State.groups;\n    const state = this;\n\n    // Check if existing state given, just a basic transition\n    if (next && next.j) {\n      state.j[input] = next;\n      return next;\n    }\n    const t = next;\n\n    // Take the transition with the usual default mechanisms and use that as\n    // a template for creating the next state\n    let nextState,\n      templateState = state.go(input);\n    if (templateState) {\n      nextState = new State();\n      assign(nextState.j, templateState.j);\n      nextState.jr.push.apply(nextState.jr, templateState.jr);\n      nextState.jd = templateState.jd;\n      nextState.t = templateState.t;\n    } else {\n      nextState = new State();\n    }\n    if (t) {\n      // Ensure newly token is in the same groups as the old token\n      if (groups) {\n        if (nextState.t && typeof nextState.t === 'string') {\n          const allFlags = assign(flagsForToken(nextState.t, groups), flags);\n          addToGroups(t, allFlags, groups);\n        } else if (flags) {\n          addToGroups(t, flags, groups);\n        }\n      }\n      nextState.t = t; // overwrite anything that was previously there\n    }\n\n    state.j[input] = nextState;\n    return nextState;\n  }\n};\n\n// Helper functions to improve minification (not exported outside linkifyjs module)\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string | string[]} input\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst ta = (state, input, next, flags, groups) => state.ta(input, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {RegExp} regexp\n * @param {T | State<T>} [next]\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst tr = (state, regexp, next, flags, groups) => state.tr(regexp, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string | string[]} input\n * @param {T | State<T>} [next]\n * @param {Flags} [flags]\n * @param {Collections<T>} [groups]\n */\nconst ts = (state, input, next, flags, groups) => state.ts(input, next, flags, groups);\n\n/**\n * @template T\n * @param {State<T>} state\n * @param {string} input\n * @param {T | State<T>} [next]\n * @param {Collections<T>} [groups]\n * @param {Flags} [flags]\n */\nconst tt = (state, input, next, flags, groups) => state.tt(input, next, flags, groups);\n\n/******************************************************************************\nText Tokens\nIdentifiers for token outputs from the regexp scanner\n******************************************************************************/\n\n// A valid web domain token\nconst WORD = 'WORD'; // only contains a-z\nconst UWORD = 'UWORD'; // contains letters other than a-z, used for IDN\n\n// Special case of word\nconst LOCALHOST = 'LOCALHOST';\n\n// Valid top-level domain, special case of WORD (see tlds.js)\nconst TLD = 'TLD';\n\n// Valid IDN TLD, special case of UWORD (see tlds.js)\nconst UTLD = 'UTLD';\n\n// The scheme portion of a web URI protocol. Supported types include: `mailto`,\n// `file`, and user-defined custom protocols. Limited to schemes that contain\n// only letters\nconst SCHEME = 'SCHEME';\n\n// Similar to SCHEME, except makes distinction for schemes that must always be\n// followed by `://`, not just `:`. Supported types include `http`, `https`,\n// `ftp`, `ftps`\nconst SLASH_SCHEME = 'SLASH_SCHEME';\n\n// Any sequence of digits 0-9\nconst NUM = 'NUM';\n\n// Any number of consecutive whitespace characters that are not newline\nconst WS = 'WS';\n\n// New line (unix style)\nconst NL$1 = 'NL'; // \\n\n\n// Opening/closing bracket classes\nconst OPENBRACE = 'OPENBRACE'; // {\nconst OPENBRACKET = 'OPENBRACKET'; // [\nconst OPENANGLEBRACKET = 'OPENANGLEBRACKET'; // <\nconst OPENPAREN = 'OPENPAREN'; // (\nconst CLOSEBRACE = 'CLOSEBRACE'; // }\nconst CLOSEBRACKET = 'CLOSEBRACKET'; // ]\nconst CLOSEANGLEBRACKET = 'CLOSEANGLEBRACKET'; // >\nconst CLOSEPAREN = 'CLOSEPAREN'; // )\n\n// Various symbols\nconst AMPERSAND = 'AMPERSAND'; // &\nconst APOSTROPHE = 'APOSTROPHE'; // '\nconst ASTERISK = 'ASTERISK'; // *\nconst AT = 'AT'; // @\nconst BACKSLASH = 'BACKSLASH'; // \\\nconst BACKTICK = 'BACKTICK'; // `\nconst CARET = 'CARET'; // ^\nconst COLON = 'COLON'; // :\nconst COMMA = 'COMMA'; // ,\nconst DOLLAR = 'DOLLAR'; // $\nconst DOT = 'DOT'; // .\nconst EQUALS = 'EQUALS'; // =\nconst EXCLAMATION = 'EXCLAMATION'; // !\nconst HYPHEN = 'HYPHEN'; // -\nconst PERCENT = 'PERCENT'; // %\nconst PIPE = 'PIPE'; // |\nconst PLUS = 'PLUS'; // +\nconst POUND = 'POUND'; // #\nconst QUERY = 'QUERY'; // ?\nconst QUOTE = 'QUOTE'; // \"\n\nconst SEMI = 'SEMI'; // ;\nconst SLASH = 'SLASH'; // /\nconst TILDE = 'TILDE'; // ~\nconst UNDERSCORE = 'UNDERSCORE'; // _\n\n// Emoji symbol\nconst EMOJI$1 = 'EMOJI';\n\n// Default token - anything that is not one of the above\nconst SYM = 'SYM';\n\nvar tk = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tWORD: WORD,\n\tUWORD: UWORD,\n\tLOCALHOST: LOCALHOST,\n\tTLD: TLD,\n\tUTLD: UTLD,\n\tSCHEME: SCHEME,\n\tSLASH_SCHEME: SLASH_SCHEME,\n\tNUM: NUM,\n\tWS: WS,\n\tNL: NL$1,\n\tOPENBRACE: OPENBRACE,\n\tOPENBRACKET: OPENBRACKET,\n\tOPENANGLEBRACKET: OPENANGLEBRACKET,\n\tOPENPAREN: OPENPAREN,\n\tCLOSEBRACE: CLOSEBRACE,\n\tCLOSEBRACKET: CLOSEBRACKET,\n\tCLOSEANGLEBRACKET: CLOSEANGLEBRACKET,\n\tCLOSEPAREN: CLOSEPAREN,\n\tAMPERSAND: AMPERSAND,\n\tAPOSTROPHE: APOSTROPHE,\n\tASTERISK: ASTERISK,\n\tAT: AT,\n\tBACKSLASH: BACKSLASH,\n\tBACKTICK: BACKTICK,\n\tCARET: CARET,\n\tCOLON: COLON,\n\tCOMMA: COMMA,\n\tDOLLAR: DOLLAR,\n\tDOT: DOT,\n\tEQUALS: EQUALS,\n\tEXCLAMATION: EXCLAMATION,\n\tHYPHEN: HYPHEN,\n\tPERCENT: PERCENT,\n\tPIPE: PIPE,\n\tPLUS: PLUS,\n\tPOUND: POUND,\n\tQUERY: QUERY,\n\tQUOTE: QUOTE,\n\tSEMI: SEMI,\n\tSLASH: SLASH,\n\tTILDE: TILDE,\n\tUNDERSCORE: UNDERSCORE,\n\tEMOJI: EMOJI$1,\n\tSYM: SYM\n});\n\n// Note that these two Unicode ones expand into a really big one with Babel\nconst ASCII_LETTER = /[a-z]/;\nconst LETTER = /\\p{L}/u; // Any Unicode character with letter data type\nconst EMOJI = /\\p{Emoji}/u; // Any Unicode emoji character\nconst EMOJI_VARIATION$1 = /\\ufe0f/;\nconst DIGIT = /\\d/;\nconst SPACE = /\\s/;\n\nvar regexp = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tASCII_LETTER: ASCII_LETTER,\n\tLETTER: LETTER,\n\tEMOJI: EMOJI,\n\tEMOJI_VARIATION: EMOJI_VARIATION$1,\n\tDIGIT: DIGIT,\n\tSPACE: SPACE\n});\n\n/**\n\tThe scanner provides an interface that takes a string of text as input, and\n\toutputs an array of tokens instances that can be used for easy URL parsing.\n*/\nconst NL = '\\n'; // New line character\nconst EMOJI_VARIATION = '\\ufe0f'; // Variation selector, follows heart and others\nconst EMOJI_JOINER = '\\u200d'; // zero-width joiner\n\nlet tlds = null,\n  utlds = null; // don't change so only have to be computed once\n\n/**\n * Scanner output token:\n * - `t` is the token name (e.g., 'NUM', 'EMOJI', 'TLD')\n * - `v` is the value of the token (e.g., '123', '❤️', 'com')\n * - `s` is the start index of the token in the original string\n * - `e` is the end index of the token in the original string\n * @typedef {{t: string, v: string, s: number, e: number}} Token\n */\n\n/**\n * @template T\n * @typedef {{ [collection: string]: T[] }} Collections\n */\n\n/**\n * Initialize the scanner character-based state machine for the given start\n * state\n * @param {[string, boolean][]} customSchemes List of custom schemes, where each\n * item is a length-2 tuple with the first element set to the string scheme, and\n * the second element set to `true` if the `://` after the scheme is optional\n */\nfunction init$2(customSchemes) {\n  if (customSchemes === void 0) {\n    customSchemes = [];\n  }\n  // Frequently used states (name argument removed during minification)\n  /** @type Collections<string> */\n  const groups = {}; // of tokens\n  State.groups = groups;\n  /** @type State<string> */\n  const Start = new State();\n  if (tlds == null) {\n    tlds = decodeTlds(encodedTlds);\n  }\n  if (utlds == null) {\n    utlds = decodeTlds(encodedUtlds);\n  }\n\n  // States for special URL symbols that accept immediately after start\n  tt(Start, \"'\", APOSTROPHE);\n  tt(Start, '{', OPENBRACE);\n  tt(Start, '[', OPENBRACKET);\n  tt(Start, '<', OPENANGLEBRACKET);\n  tt(Start, '(', OPENPAREN);\n  tt(Start, '}', CLOSEBRACE);\n  tt(Start, ']', CLOSEBRACKET);\n  tt(Start, '>', CLOSEANGLEBRACKET);\n  tt(Start, ')', CLOSEPAREN);\n  tt(Start, '&', AMPERSAND);\n  tt(Start, '*', ASTERISK);\n  tt(Start, '@', AT);\n  tt(Start, '`', BACKTICK);\n  tt(Start, '^', CARET);\n  tt(Start, ':', COLON);\n  tt(Start, ',', COMMA);\n  tt(Start, '$', DOLLAR);\n  tt(Start, '.', DOT);\n  tt(Start, '=', EQUALS);\n  tt(Start, '!', EXCLAMATION);\n  tt(Start, '-', HYPHEN);\n  tt(Start, '%', PERCENT);\n  tt(Start, '|', PIPE);\n  tt(Start, '+', PLUS);\n  tt(Start, '#', POUND);\n  tt(Start, '?', QUERY);\n  tt(Start, '\"', QUOTE);\n  tt(Start, '/', SLASH);\n  tt(Start, ';', SEMI);\n  tt(Start, '~', TILDE);\n  tt(Start, '_', UNDERSCORE);\n  tt(Start, '\\\\', BACKSLASH);\n  const Num = tr(Start, DIGIT, NUM, {\n    [numeric]: true\n  });\n  tr(Num, DIGIT, Num);\n\n  // State which emits a word token\n  const Word = tr(Start, ASCII_LETTER, WORD, {\n    [ascii]: true\n  });\n  tr(Word, ASCII_LETTER, Word);\n\n  // Same as previous, but specific to non-fsm.ascii alphabet words\n  const UWord = tr(Start, LETTER, UWORD, {\n    [alpha]: true\n  });\n  tr(UWord, ASCII_LETTER); // Non-accepting\n  tr(UWord, LETTER, UWord);\n\n  // Whitespace jumps\n  // Tokens of only non-newline whitespace are arbitrarily long\n  // If any whitespace except newline, more whitespace!\n  const Ws = tr(Start, SPACE, WS, {\n    [whitespace]: true\n  });\n  tt(Start, NL, NL$1, {\n    [whitespace]: true\n  });\n  tt(Ws, NL); // non-accepting state to avoid mixing whitespaces\n  tr(Ws, SPACE, Ws);\n\n  // Emoji tokens. They are not grouped by the scanner except in cases where a\n  // zero-width joiner is present\n  const Emoji = tr(Start, EMOJI, EMOJI$1, {\n    [emoji]: true\n  });\n  tr(Emoji, EMOJI, Emoji);\n  tt(Emoji, EMOJI_VARIATION, Emoji);\n  // tt(Start, EMOJI_VARIATION, Emoji); // This one is sketchy\n\n  const EmojiJoiner = tt(Emoji, EMOJI_JOINER);\n  tr(EmojiJoiner, EMOJI, Emoji);\n  // tt(EmojiJoiner, EMOJI_VARIATION, Emoji); // also sketchy\n\n  // Generates states for top-level domains\n  // Note that this is most accurate when tlds are in alphabetical order\n  const wordjr = [[ASCII_LETTER, Word]];\n  const uwordjr = [[ASCII_LETTER, null], [LETTER, UWord]];\n  for (let i = 0; i < tlds.length; i++) {\n    fastts(Start, tlds[i], TLD, WORD, wordjr);\n  }\n  for (let i = 0; i < utlds.length; i++) {\n    fastts(Start, utlds[i], UTLD, UWORD, uwordjr);\n  }\n  addToGroups(TLD, {\n    tld: true,\n    ascii: true\n  }, groups);\n  addToGroups(UTLD, {\n    utld: true,\n    alpha: true\n  }, groups);\n\n  // Collect the states generated by different protocols. NOTE: If any new TLDs\n  // get added that are also protocols, set the token to be the same as the\n  // protocol to ensure parsing works as expected.\n  fastts(Start, 'file', SCHEME, WORD, wordjr);\n  fastts(Start, 'mailto', SCHEME, WORD, wordjr);\n  fastts(Start, 'http', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'https', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'ftp', SLASH_SCHEME, WORD, wordjr);\n  fastts(Start, 'ftps', SLASH_SCHEME, WORD, wordjr);\n  addToGroups(SCHEME, {\n    scheme: true,\n    ascii: true\n  }, groups);\n  addToGroups(SLASH_SCHEME, {\n    slashscheme: true,\n    ascii: true\n  }, groups);\n\n  // Register custom schemes. Assumes each scheme is asciinumeric with hyphens\n  customSchemes = customSchemes.sort((a, b) => a[0] > b[0] ? 1 : -1);\n  for (let i = 0; i < customSchemes.length; i++) {\n    const sch = customSchemes[i][0];\n    const optionalSlashSlash = customSchemes[i][1];\n    const flags = optionalSlashSlash ? {\n      [scheme]: true\n    } : {\n      [slashscheme]: true\n    };\n    if (sch.indexOf('-') >= 0) {\n      flags[domain] = true;\n    } else if (!ASCII_LETTER.test(sch)) {\n      flags[numeric] = true; // numbers only\n    } else if (DIGIT.test(sch)) {\n      flags[asciinumeric] = true;\n    } else {\n      flags[ascii] = true;\n    }\n    ts(Start, sch, sch, flags);\n  }\n\n  // Localhost token\n  ts(Start, 'localhost', LOCALHOST, {\n    ascii: true\n  });\n\n  // Set default transition for start state (some symbol)\n  Start.jd = new State(SYM);\n  return {\n    start: Start,\n    tokens: assign({\n      groups\n    }, tk)\n  };\n}\n\n/**\n\tGiven a string, returns an array of TOKEN instances representing the\n\tcomposition of that string.\n\n\t@method run\n\t@param {State<string>} start scanner starting state\n\t@param {string} str input string to scan\n\t@return {Token[]} list of tokens, each with a type and value\n*/\nfunction run$1(start, str) {\n  // State machine is not case sensitive, so input is tokenized in lowercased\n  // form (still returns regular case). Uses selective `toLowerCase` because\n  // lowercasing the entire string causes the length and character position to\n  // vary in some non-English strings with V8-based runtimes.\n  const iterable = stringToArray(str.replace(/[A-Z]/g, c => c.toLowerCase()));\n  const charCount = iterable.length; // <= len if there are emojis, etc\n  const tokens = []; // return value\n\n  // cursor through the string itself, accounting for characters that have\n  // width with length 2 such as emojis\n  let cursor = 0;\n\n  // Cursor through the array-representation of the string\n  let charCursor = 0;\n\n  // Tokenize the string\n  while (charCursor < charCount) {\n    let state = start;\n    let nextState = null;\n    let tokenLength = 0;\n    let latestAccepting = null;\n    let sinceAccepts = -1;\n    let charsSinceAccepts = -1;\n    while (charCursor < charCount && (nextState = state.go(iterable[charCursor]))) {\n      state = nextState;\n\n      // Keep track of the latest accepting state\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        charsSinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts += iterable[charCursor].length;\n        charsSinceAccepts++;\n      }\n      tokenLength += iterable[charCursor].length;\n      cursor += iterable[charCursor].length;\n      charCursor++;\n    }\n\n    // Roll back to the latest accepting state\n    cursor -= sinceAccepts;\n    charCursor -= charsSinceAccepts;\n    tokenLength -= sinceAccepts;\n\n    // No more jumps, just make a new token from the last accepting one\n    tokens.push({\n      t: latestAccepting.t,\n      // token type/name\n      v: str.slice(cursor - tokenLength, cursor),\n      // string value\n      s: cursor - tokenLength,\n      // start index\n      e: cursor // end index (excluding)\n    });\n  }\n\n  return tokens;\n}\n\n/**\n * Convert a String to an Array of characters, taking into account that some\n * characters like emojis take up two string indexes.\n *\n * Adapted from core-js (MIT license)\n * https://github.com/zloirock/core-js/blob/2d69cf5f99ab3ea3463c395df81e5a15b68f49d9/packages/core-js/internals/string-multibyte.js\n *\n * @function stringToArray\n * @param {string} str\n * @returns {string[]}\n */\nfunction stringToArray(str) {\n  const result = [];\n  const len = str.length;\n  let index = 0;\n  while (index < len) {\n    let first = str.charCodeAt(index);\n    let second;\n    let char = first < 0xd800 || first > 0xdbff || index + 1 === len || (second = str.charCodeAt(index + 1)) < 0xdc00 || second > 0xdfff ? str[index] // single character\n    : str.slice(index, index + 2); // two-index characters\n    result.push(char);\n    index += char.length;\n  }\n  return result;\n}\n\n/**\n * Fast version of ts function for when transition defaults are well known\n * @param {State<string>} state\n * @param {string} input\n * @param {string} t\n * @param {string} defaultt\n * @param {[RegExp, State<string>][]} jr\n * @returns {State<string>}\n */\nfunction fastts(state, input, t, defaultt, jr) {\n  let next;\n  const len = input.length;\n  for (let i = 0; i < len - 1; i++) {\n    const char = input[i];\n    if (state.j[char]) {\n      next = state.j[char];\n    } else {\n      next = new State(defaultt);\n      next.jr = jr.slice();\n      state.j[char] = next;\n    }\n    state = next;\n  }\n  next = new State(t);\n  next.jr = jr.slice();\n  state.j[input[len - 1]] = next;\n  return next;\n}\n\n/**\n * Converts a string of Top-Level Domain names encoded in update-tlds.js back\n * into a list of strings.\n * @param {str} encoded encoded TLDs string\n * @returns {str[]} original TLDs list\n */\nfunction decodeTlds(encoded) {\n  const words = [];\n  const stack = [];\n  let i = 0;\n  let digits = '0123456789';\n  while (i < encoded.length) {\n    let popDigitCount = 0;\n    while (digits.indexOf(encoded[i + popDigitCount]) >= 0) {\n      popDigitCount++; // encountered some digits, have to pop to go one level up trie\n    }\n\n    if (popDigitCount > 0) {\n      words.push(stack.join('')); // whatever preceded the pop digits must be a word\n      for (let popCount = parseInt(encoded.substring(i, i + popDigitCount), 10); popCount > 0; popCount--) {\n        stack.pop();\n      }\n      i += popDigitCount;\n    } else {\n      stack.push(encoded[i]); // drop down a level into the trie\n      i++;\n    }\n  }\n  return words;\n}\n\n/**\n * An object where each key is a valid DOM Event Name such as `click` or `focus`\n * and each value is an event handler function.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/Element#events\n * @typedef {?{ [event: string]: Function }} EventListeners\n */\n\n/**\n * All formatted properties required to render a link, including `tagName`,\n * `attributes`, `content` and `eventListeners`.\n * @typedef {{ tagName: any, attributes: {[attr: string]: any}, content: string,\n * eventListeners: EventListeners }} IntermediateRepresentation\n */\n\n/**\n * Specify either an object described by the template type `O` or a function.\n *\n * The function takes a string value (usually the link's href attribute), the\n * link type (`'url'`, `'hashtag`', etc.) and an internal token representation\n * of the link. It should return an object of the template type `O`\n * @template O\n * @typedef {O | ((value: string, type: string, token: MultiToken) => O)} OptObj\n */\n\n/**\n * Specify either a function described by template type `F` or an object.\n *\n * Each key in the object should be a link type (`'url'`, `'hashtag`', etc.). Each\n * value should be a function with template type `F` that is called when the\n * corresponding link type is encountered.\n * @template F\n * @typedef {F | { [type: string]: F}} OptFn\n */\n\n/**\n * Specify either a value with template type `V`, a function that returns `V` or\n * an object where each value resolves to `V`.\n *\n * The function takes a string value (usually the link's href attribute), the\n * link type (`'url'`, `'hashtag`', etc.) and an internal token representation\n * of the link. It should return an object of the template type `V`\n *\n * For the object, each key should be a link type (`'url'`, `'hashtag`', etc.).\n * Each value should either have type `V` or a function that returns V. This\n * function similarly takes a string value and a token.\n *\n * Example valid types for `Opt<string>`:\n *\n * ```js\n * 'hello'\n * (value, type, token) => 'world'\n * { url: 'hello', email: (value, token) => 'world'}\n * ```\n * @template V\n * @typedef {V | ((value: string, type: string, token: MultiToken) => V) | { [type: string]: V | ((value: string, token: MultiToken) => V) }} Opt\n */\n\n/**\n * See available options: https://linkify.js.org/docs/options.html\n * @typedef {{\n * \tdefaultProtocol?: string,\n *  events?: OptObj<EventListeners>,\n * \tformat?: Opt<string>,\n * \tformatHref?: Opt<string>,\n * \tnl2br?: boolean,\n * \ttagName?: Opt<any>,\n * \ttarget?: Opt<string>,\n * \trel?: Opt<string>,\n * \tvalidate?: Opt<boolean>,\n * \ttruncate?: Opt<number>,\n * \tclassName?: Opt<string>,\n * \tattributes?: OptObj<({ [attr: string]: any })>,\n *  ignoreTags?: string[],\n * \trender?: OptFn<((ir: IntermediateRepresentation) => any)>\n * }} Opts\n */\n\n/**\n * @type Required<Opts>\n */\nconst defaults = {\n  defaultProtocol: 'http',\n  events: null,\n  format: noop,\n  formatHref: noop,\n  nl2br: false,\n  tagName: 'a',\n  target: null,\n  rel: null,\n  validate: true,\n  truncate: Infinity,\n  className: null,\n  attributes: null,\n  ignoreTags: [],\n  render: null\n};\n\n/**\n * Utility class for linkify interfaces to apply specified\n * {@link Opts formatting and rendering options}.\n *\n * @param {Opts | Options} [opts] Option value overrides.\n * @param {(ir: IntermediateRepresentation) => any} [defaultRender] (For\n *   internal use) default render function that determines how to generate an\n *   HTML element based on a link token's derived tagName, attributes and HTML.\n *   Similar to render option\n */\nfunction Options(opts, defaultRender) {\n  if (defaultRender === void 0) {\n    defaultRender = null;\n  }\n  let o = assign({}, defaults);\n  if (opts) {\n    o = assign(o, opts instanceof Options ? opts.o : opts);\n  }\n\n  // Ensure all ignored tags are uppercase\n  const ignoredTags = o.ignoreTags;\n  const uppercaseIgnoredTags = [];\n  for (let i = 0; i < ignoredTags.length; i++) {\n    uppercaseIgnoredTags.push(ignoredTags[i].toUpperCase());\n  }\n  /** @protected */\n  this.o = o;\n  if (defaultRender) {\n    this.defaultRender = defaultRender;\n  }\n  this.ignoreTags = uppercaseIgnoredTags;\n}\nOptions.prototype = {\n  o: defaults,\n  /**\n   * @type string[]\n   */\n  ignoreTags: [],\n  /**\n   * @param {IntermediateRepresentation} ir\n   * @returns {any}\n   */\n  defaultRender(ir) {\n    return ir;\n  },\n  /**\n   * Returns true or false based on whether a token should be displayed as a\n   * link based on the user options.\n   * @param {MultiToken} token\n   * @returns {boolean}\n   */\n  check(token) {\n    return this.get('validate', token.toString(), token);\n  },\n  // Private methods\n\n  /**\n   * Resolve an option's value based on the value of the option and the given\n   * params. If operator and token are specified and the target option is\n   * callable, automatically calls the function with the given argument.\n   * @template {keyof Opts} K\n   * @param {K} key Name of option to use\n   * @param {string} [operator] will be passed to the target option if it's a\n   * function. If not specified, RAW function value gets returned\n   * @param {MultiToken} [token] The token from linkify.tokenize\n   * @returns {Opts[K] | any}\n   */\n  get(key, operator, token) {\n    const isCallable = operator != null;\n    let option = this.o[key];\n    if (!option) {\n      return option;\n    }\n    if (typeof option === 'object') {\n      option = token.t in option ? option[token.t] : defaults[key];\n      if (typeof option === 'function' && isCallable) {\n        option = option(operator, token);\n      }\n    } else if (typeof option === 'function' && isCallable) {\n      option = option(operator, token.t, token);\n    }\n    return option;\n  },\n  /**\n   * @template {keyof Opts} L\n   * @param {L} key Name of options object to use\n   * @param {string} [operator]\n   * @param {MultiToken} [token]\n   * @returns {Opts[L] | any}\n   */\n  getObj(key, operator, token) {\n    let obj = this.o[key];\n    if (typeof obj === 'function' && operator != null) {\n      obj = obj(operator, token.t, token);\n    }\n    return obj;\n  },\n  /**\n   * Convert the given token to a rendered element that may be added to the\n   * calling-interface's DOM\n   * @param {MultiToken} token Token to render to an HTML element\n   * @returns {any} Render result; e.g., HTML string, DOM element, React\n   *   Component, etc.\n   */\n  render(token) {\n    const ir = token.render(this); // intermediate representation\n    const renderFn = this.get('render', null, token) || this.defaultRender;\n    return renderFn(ir, token.t, token);\n  }\n};\nfunction noop(val) {\n  return val;\n}\n\nvar options = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tdefaults: defaults,\n\tOptions: Options,\n\tassign: assign\n});\n\n/******************************************************************************\n\tMulti-Tokens\n\tTokens composed of arrays of TextTokens\n******************************************************************************/\n\n/**\n * @param {string} value\n * @param {Token[]} tokens\n */\nfunction MultiToken(value, tokens) {\n  this.t = 'token';\n  this.v = value;\n  this.tk = tokens;\n}\n\n/**\n * Abstract class used for manufacturing tokens of text tokens. That is rather\n * than the value for a token being a small string of text, it's value an array\n * of text tokens.\n *\n * Used for grouping together URLs, emails, hashtags, and other potential\n * creations.\n * @class MultiToken\n * @property {string} t\n * @property {string} v\n * @property {Token[]} tk\n * @abstract\n */\nMultiToken.prototype = {\n  isLink: false,\n  /**\n   * Return the string this token represents.\n   * @return {string}\n   */\n  toString() {\n    return this.v;\n  },\n  /**\n   * What should the value for this token be in the `href` HTML attribute?\n   * Returns the `.toString` value by default.\n   * @param {string} [scheme]\n   * @return {string}\n  */\n  toHref(scheme) {\n    return this.toString();\n  },\n  /**\n   * @param {Options} options Formatting options\n   * @returns {string}\n   */\n  toFormattedString(options) {\n    const val = this.toString();\n    const truncate = options.get('truncate', val, this);\n    const formatted = options.get('format', val, this);\n    return truncate && formatted.length > truncate ? formatted.substring(0, truncate) + '…' : formatted;\n  },\n  /**\n   *\n   * @param {Options} options\n   * @returns {string}\n   */\n  toFormattedHref(options) {\n    return options.get('formatHref', this.toHref(options.get('defaultProtocol')), this);\n  },\n  /**\n   * The start index of this token in the original input string\n   * @returns {number}\n   */\n  startIndex() {\n    return this.tk[0].s;\n  },\n  /**\n   * The end index of this token in the original input string (up to this\n   * index but not including it)\n   * @returns {number}\n   */\n  endIndex() {\n    return this.tk[this.tk.length - 1].e;\n  },\n  /**\n  \tReturns an object  of relevant values for this token, which includes keys\n  \t* type - Kind of token ('url', 'email', etc.)\n  \t* value - Original text\n  \t* href - The value that should be added to the anchor tag's href\n  \t\tattribute\n  \t\t@method toObject\n  \t@param {string} [protocol] `'http'` by default\n  */\n  toObject(protocol) {\n    if (protocol === void 0) {\n      protocol = defaults.defaultProtocol;\n    }\n    return {\n      type: this.t,\n      value: this.toString(),\n      isLink: this.isLink,\n      href: this.toHref(protocol),\n      start: this.startIndex(),\n      end: this.endIndex()\n    };\n  },\n  /**\n   *\n   * @param {Options} options Formatting option\n   */\n  toFormattedObject(options) {\n    return {\n      type: this.t,\n      value: this.toFormattedString(options),\n      isLink: this.isLink,\n      href: this.toFormattedHref(options),\n      start: this.startIndex(),\n      end: this.endIndex()\n    };\n  },\n  /**\n   * Whether this token should be rendered as a link according to the given options\n   * @param {Options} options\n   * @returns {boolean}\n   */\n  validate(options) {\n    return options.get('validate', this.toString(), this);\n  },\n  /**\n   * Return an object that represents how this link should be rendered.\n   * @param {Options} options Formattinng options\n   */\n  render(options) {\n    const token = this;\n    const href = this.toHref(options.get('defaultProtocol'));\n    const formattedHref = options.get('formatHref', href, this);\n    const tagName = options.get('tagName', href, token);\n    const content = this.toFormattedString(options);\n    const attributes = {};\n    const className = options.get('className', href, token);\n    const target = options.get('target', href, token);\n    const rel = options.get('rel', href, token);\n    const attrs = options.getObj('attributes', href, token);\n    const eventListeners = options.getObj('events', href, token);\n    attributes.href = formattedHref;\n    if (className) {\n      attributes.class = className;\n    }\n    if (target) {\n      attributes.target = target;\n    }\n    if (rel) {\n      attributes.rel = rel;\n    }\n    if (attrs) {\n      assign(attributes, attrs);\n    }\n    return {\n      tagName,\n      attributes,\n      content,\n      eventListeners\n    };\n  }\n};\n\n/**\n * Create a new token that can be emitted by the parser state machine\n * @param {string} type readable type of the token\n * @param {object} props properties to assign or override, including isLink = true or false\n * @returns {new (value: string, tokens: Token[]) => MultiToken} new token class\n */\nfunction createTokenClass(type, props) {\n  class Token extends MultiToken {\n    constructor(value, tokens) {\n      super(value, tokens);\n      this.t = type;\n    }\n  }\n  for (const p in props) {\n    Token.prototype[p] = props[p];\n  }\n  Token.t = type;\n  return Token;\n}\n\n/**\n\tRepresents a list of tokens making up a valid email address\n*/\nconst Email = createTokenClass('email', {\n  isLink: true,\n  toHref() {\n    return 'mailto:' + this.toString();\n  }\n});\n\n/**\n\tRepresents some plain text\n*/\nconst Text = createTokenClass('text');\n\n/**\n\tMulti-linebreak token - represents a line break\n\t@class Nl\n*/\nconst Nl = createTokenClass('nl');\n\n/**\n\tRepresents a list of text tokens making up a valid URL\n\t@class Url\n*/\nconst Url = createTokenClass('url', {\n  isLink: true,\n  /**\n  \tLowercases relevant parts of the domain and adds the protocol if\n  \trequired. Note that this will not escape unsafe HTML characters in the\n  \tURL.\n  \t\t@param {string} [scheme] default scheme (e.g., 'https')\n  \t@return {string} the full href\n  */\n  toHref(scheme) {\n    if (scheme === void 0) {\n      scheme = defaults.defaultProtocol;\n    }\n    // Check if already has a prefix scheme\n    return this.hasProtocol() ? this.v : `${scheme}://${this.v}`;\n  },\n  /**\n   * Check whether this URL token has a protocol\n   * @return {boolean}\n   */\n  hasProtocol() {\n    const tokens = this.tk;\n    return tokens.length >= 2 && tokens[0].t !== LOCALHOST && tokens[1].t === COLON;\n  }\n});\n\nvar multi = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tMultiToken: MultiToken,\n\tBase: MultiToken,\n\tcreateTokenClass: createTokenClass,\n\tEmail: Email,\n\tText: Text,\n\tNl: Nl,\n\tUrl: Url\n});\n\n/**\n\tNot exactly parser, more like the second-stage scanner (although we can\n\ttheoretically hotswap the code here with a real parser in the future... but\n\tfor a little URL-finding utility abstract syntax trees may be a little\n\toverkill).\n\n\tURL format: http://en.wikipedia.org/wiki/URI_scheme\n\tEmail format: http://en.wikipedia.org/wiki/EmailAddress (links to RFC in\n\treference)\n\n\t@module linkify\n\t@submodule parser\n\t@main run\n*/\nconst makeState = arg => new State(arg);\n\n/**\n * Generate the parser multi token-based state machine\n * @param {{ groups: Collections<string> }} tokens\n */\nfunction init$1(_ref) {\n  let {\n    groups\n  } = _ref;\n  // Types of characters the URL can definitely end in\n  const qsAccepting = groups.domain.concat([AMPERSAND, ASTERISK, AT, BACKSLASH, BACKTICK, CARET, DOLLAR, EQUALS, HYPHEN, NUM, PERCENT, PIPE, PLUS, POUND, SLASH, SYM, TILDE, UNDERSCORE]);\n\n  // Types of tokens that can follow a URL and be part of the query string\n  // but cannot be the very last characters\n  // Characters that cannot appear in the URL at all should be excluded\n  const qsNonAccepting = [APOSTROPHE, CLOSEANGLEBRACKET, CLOSEBRACE, CLOSEBRACKET, CLOSEPAREN, COLON, COMMA, DOT, EXCLAMATION, OPENANGLEBRACKET, OPENBRACE, OPENBRACKET, OPENPAREN, QUERY, QUOTE, SEMI];\n\n  // For addresses without the mailto prefix\n  // Tokens allowed in the localpart of the email\n  const localpartAccepting = [AMPERSAND, APOSTROPHE, ASTERISK, BACKSLASH, BACKTICK, CARET, CLOSEBRACE, DOLLAR, EQUALS, HYPHEN, OPENBRACE, PERCENT, PIPE, PLUS, POUND, QUERY, SLASH, SYM, TILDE, UNDERSCORE];\n\n  // The universal starting state.\n  /**\n   * @type State<Token>\n   */\n  const Start = makeState();\n  const Localpart = tt(Start, TILDE); // Local part of the email address\n  ta(Localpart, localpartAccepting, Localpart);\n  ta(Localpart, groups.domain, Localpart);\n  const Domain = makeState(),\n    Scheme = makeState(),\n    SlashScheme = makeState();\n  ta(Start, groups.domain, Domain); // parsed string ends with a potential domain name (A)\n  ta(Start, groups.scheme, Scheme); // e.g., 'mailto'\n  ta(Start, groups.slashscheme, SlashScheme); // e.g., 'http'\n\n  ta(Domain, localpartAccepting, Localpart);\n  ta(Domain, groups.domain, Domain);\n  const LocalpartAt = tt(Domain, AT); // Local part of the email address plus @\n\n  tt(Localpart, AT, LocalpartAt); // close to an email address now\n\n  // Local part of an email address can be e.g. 'http' or 'mailto'\n  tt(Scheme, AT, LocalpartAt);\n  tt(SlashScheme, AT, LocalpartAt);\n  const LocalpartDot = tt(Localpart, DOT); // Local part of the email address plus '.' (localpart cannot end in .)\n  ta(LocalpartDot, localpartAccepting, Localpart);\n  ta(LocalpartDot, groups.domain, Localpart);\n  const EmailDomain = makeState();\n  ta(LocalpartAt, groups.domain, EmailDomain); // parsed string starts with local email info + @ with a potential domain name\n  ta(EmailDomain, groups.domain, EmailDomain);\n  const EmailDomainDot = tt(EmailDomain, DOT); // domain followed by DOT\n  ta(EmailDomainDot, groups.domain, EmailDomain);\n  const Email$1 = makeState(Email); // Possible email address (could have more tlds)\n  ta(EmailDomainDot, groups.tld, Email$1);\n  ta(EmailDomainDot, groups.utld, Email$1);\n  tt(LocalpartAt, LOCALHOST, Email$1);\n\n  // Hyphen can jump back to a domain name\n  const EmailDomainHyphen = tt(EmailDomain, HYPHEN); // parsed string starts with local email info + @ with a potential domain name\n  ta(EmailDomainHyphen, groups.domain, EmailDomain);\n  ta(Email$1, groups.domain, EmailDomain);\n  tt(Email$1, DOT, EmailDomainDot);\n  tt(Email$1, HYPHEN, EmailDomainHyphen);\n\n  // Final possible email states\n  const EmailColon = tt(Email$1, COLON); // URL followed by colon (potential port number here)\n  /*const EmailColonPort = */\n  ta(EmailColon, groups.numeric, Email); // URL followed by colon and port numner\n\n  // Account for dots and hyphens. Hyphens are usually parts of domain names\n  // (but not TLDs)\n  const DomainHyphen = tt(Domain, HYPHEN); // domain followed by hyphen\n  const DomainDot = tt(Domain, DOT); // domain followed by DOT\n  ta(DomainHyphen, groups.domain, Domain);\n  ta(DomainDot, localpartAccepting, Localpart);\n  ta(DomainDot, groups.domain, Domain);\n  const DomainDotTld = makeState(Url); // Simplest possible URL with no query string\n  ta(DomainDot, groups.tld, DomainDotTld);\n  ta(DomainDot, groups.utld, DomainDotTld);\n  ta(DomainDotTld, groups.domain, Domain);\n  ta(DomainDotTld, localpartAccepting, Localpart);\n  tt(DomainDotTld, DOT, DomainDot);\n  tt(DomainDotTld, HYPHEN, DomainHyphen);\n  tt(DomainDotTld, AT, LocalpartAt);\n  const DomainDotTldColon = tt(DomainDotTld, COLON); // URL followed by colon (potential port number here)\n  const DomainDotTldColonPort = makeState(Url); // TLD followed by a port number\n  ta(DomainDotTldColon, groups.numeric, DomainDotTldColonPort);\n\n  // Long URL with optional port and maybe query string\n  const Url$1 = makeState(Url);\n\n  // URL with extra symbols at the end, followed by an opening bracket\n  const UrlNonaccept = makeState(); // URL followed by some symbols (will not be part of the final URL)\n\n  // Query strings\n  ta(Url$1, qsAccepting, Url$1);\n  ta(Url$1, qsNonAccepting, UrlNonaccept);\n  ta(UrlNonaccept, qsAccepting, Url$1);\n  ta(UrlNonaccept, qsNonAccepting, UrlNonaccept);\n\n  // Become real URLs after `SLASH` or `COLON NUM SLASH`\n  // Here works with or without scheme:// prefix\n  tt(DomainDotTld, SLASH, Url$1);\n  tt(DomainDotTldColonPort, SLASH, Url$1);\n\n  // Note that domains that begin with schemes are treated slighly differently\n  const SchemeColon = tt(Scheme, COLON); // e.g., 'mailto:'\n  const SlashSchemeColon = tt(SlashScheme, COLON); // e.g., 'http:'\n  const SlashSchemeColonSlash = tt(SlashSchemeColon, SLASH); // e.g., 'http:/'\n\n  const UriPrefix = tt(SlashSchemeColonSlash, SLASH); // e.g., 'http://'\n\n  // Scheme states can transition to domain states\n  ta(Scheme, groups.domain, Domain);\n  tt(Scheme, DOT, DomainDot);\n  tt(Scheme, HYPHEN, DomainHyphen);\n  ta(SlashScheme, groups.domain, Domain);\n  tt(SlashScheme, DOT, DomainDot);\n  tt(SlashScheme, HYPHEN, DomainHyphen);\n\n  // Force URL with scheme prefix followed by anything sane\n  ta(SchemeColon, groups.domain, Url$1);\n  tt(SchemeColon, SLASH, Url$1);\n  ta(UriPrefix, groups.domain, Url$1);\n  ta(UriPrefix, qsAccepting, Url$1);\n  tt(UriPrefix, SLASH, Url$1);\n\n  // URL, followed by an opening bracket\n  const UrlOpenbrace = tt(Url$1, OPENBRACE); // URL followed by {\n  const UrlOpenbracket = tt(Url$1, OPENBRACKET); // URL followed by [\n  const UrlOpenanglebracket = tt(Url$1, OPENANGLEBRACKET); // URL followed by <\n  const UrlOpenparen = tt(Url$1, OPENPAREN); // URL followed by (\n\n  tt(UrlNonaccept, OPENBRACE, UrlOpenbrace);\n  tt(UrlNonaccept, OPENBRACKET, UrlOpenbracket);\n  tt(UrlNonaccept, OPENANGLEBRACKET, UrlOpenanglebracket);\n  tt(UrlNonaccept, OPENPAREN, UrlOpenparen);\n\n  // Closing bracket component. This character WILL be included in the URL\n  tt(UrlOpenbrace, CLOSEBRACE, Url$1);\n  tt(UrlOpenbracket, CLOSEBRACKET, Url$1);\n  tt(UrlOpenanglebracket, CLOSEANGLEBRACKET, Url$1);\n  tt(UrlOpenparen, CLOSEPAREN, Url$1);\n  tt(UrlOpenbrace, CLOSEBRACE, Url$1);\n\n  // URL that beings with an opening bracket, followed by a symbols.\n  // Note that the final state can still be `UrlOpenbrace` (if the URL only\n  // has a single opening bracket for some reason).\n  const UrlOpenbraceQ = makeState(Url); // URL followed by { and some symbols that the URL can end it\n  const UrlOpenbracketQ = makeState(Url); // URL followed by [ and some symbols that the URL can end it\n  const UrlOpenanglebracketQ = makeState(Url); // URL followed by < and some symbols that the URL can end it\n  const UrlOpenparenQ = makeState(Url); // URL followed by ( and some symbols that the URL can end it\n  ta(UrlOpenbrace, qsAccepting, UrlOpenbraceQ);\n  ta(UrlOpenbracket, qsAccepting, UrlOpenbracketQ);\n  ta(UrlOpenanglebracket, qsAccepting, UrlOpenanglebracketQ);\n  ta(UrlOpenparen, qsAccepting, UrlOpenparenQ);\n  const UrlOpenbraceSyms = makeState(); // UrlOpenbrace followed by some symbols it cannot end it\n  const UrlOpenbracketSyms = makeState(); // UrlOpenbracketQ followed by some symbols it cannot end it\n  const UrlOpenanglebracketSyms = makeState(); // UrlOpenanglebracketQ followed by some symbols it cannot end it\n  const UrlOpenparenSyms = makeState(); // UrlOpenparenQ followed by some symbols it cannot end it\n  ta(UrlOpenbrace, qsNonAccepting);\n  ta(UrlOpenbracket, qsNonAccepting);\n  ta(UrlOpenanglebracket, qsNonAccepting);\n  ta(UrlOpenparen, qsNonAccepting);\n\n  // URL that begins with an opening bracket, followed by some symbols\n  ta(UrlOpenbraceQ, qsAccepting, UrlOpenbraceQ);\n  ta(UrlOpenbracketQ, qsAccepting, UrlOpenbracketQ);\n  ta(UrlOpenanglebracketQ, qsAccepting, UrlOpenanglebracketQ);\n  ta(UrlOpenparenQ, qsAccepting, UrlOpenparenQ);\n  ta(UrlOpenbraceQ, qsNonAccepting, UrlOpenbraceQ);\n  ta(UrlOpenbracketQ, qsNonAccepting, UrlOpenbracketQ);\n  ta(UrlOpenanglebracketQ, qsNonAccepting, UrlOpenanglebracketQ);\n  ta(UrlOpenparenQ, qsNonAccepting, UrlOpenparenQ);\n  ta(UrlOpenbraceSyms, qsAccepting, UrlOpenbraceSyms);\n  ta(UrlOpenbracketSyms, qsAccepting, UrlOpenbracketQ);\n  ta(UrlOpenanglebracketSyms, qsAccepting, UrlOpenanglebracketQ);\n  ta(UrlOpenparenSyms, qsAccepting, UrlOpenparenQ);\n  ta(UrlOpenbraceSyms, qsNonAccepting, UrlOpenbraceSyms);\n  ta(UrlOpenbracketSyms, qsNonAccepting, UrlOpenbracketSyms);\n  ta(UrlOpenanglebracketSyms, qsNonAccepting, UrlOpenanglebracketSyms);\n  ta(UrlOpenparenSyms, qsNonAccepting, UrlOpenparenSyms);\n\n  // Close brace/bracket to become regular URL\n  tt(UrlOpenbracketQ, CLOSEBRACKET, Url$1);\n  tt(UrlOpenanglebracketQ, CLOSEANGLEBRACKET, Url$1);\n  tt(UrlOpenparenQ, CLOSEPAREN, Url$1);\n  tt(UrlOpenbraceQ, CLOSEBRACE, Url$1);\n  tt(UrlOpenbracketSyms, CLOSEBRACKET, Url$1);\n  tt(UrlOpenanglebracketSyms, CLOSEANGLEBRACKET, Url$1);\n  tt(UrlOpenparenSyms, CLOSEPAREN, Url$1);\n  tt(UrlOpenbraceSyms, CLOSEPAREN, Url$1);\n  tt(Start, LOCALHOST, DomainDotTld); // localhost is a valid URL state\n  tt(Start, NL$1, Nl); // single new line\n\n  return {\n    start: Start,\n    tokens: tk\n  };\n}\n\n/**\n * Run the parser state machine on a list of scanned string-based tokens to\n * create a list of multi tokens, each of which represents a URL, email address,\n * plain text, etc.\n *\n * @param {State<MultiToken>} start parser start state\n * @param {string} input the original input used to generate the given tokens\n * @param {Token[]} tokens list of scanned tokens\n * @returns {MultiToken[]}\n */\nfunction run(start, input, tokens) {\n  let len = tokens.length;\n  let cursor = 0;\n  let multis = [];\n  let textTokens = [];\n  while (cursor < len) {\n    let state = start;\n    let secondState = null;\n    let nextState = null;\n    let multiLength = 0;\n    let latestAccepting = null;\n    let sinceAccepts = -1;\n    while (cursor < len && !(secondState = state.go(tokens[cursor].t))) {\n      // Starting tokens with nowhere to jump to.\n      // Consider these to be just plain text\n      textTokens.push(tokens[cursor++]);\n    }\n    while (cursor < len && (nextState = secondState || state.go(tokens[cursor].t))) {\n      // Get the next state\n      secondState = null;\n      state = nextState;\n\n      // Keep track of the latest accepting state\n      if (state.accepts()) {\n        sinceAccepts = 0;\n        latestAccepting = state;\n      } else if (sinceAccepts >= 0) {\n        sinceAccepts++;\n      }\n      cursor++;\n      multiLength++;\n    }\n    if (sinceAccepts < 0) {\n      // No accepting state was found, part of a regular text token add\n      // the first text token to the text tokens array and try again from\n      // the next\n      cursor -= multiLength;\n      if (cursor < len) {\n        textTokens.push(tokens[cursor]);\n        cursor++;\n      }\n    } else {\n      // Accepting state!\n      // First close off the textTokens (if available)\n      if (textTokens.length > 0) {\n        multis.push(initMultiToken(Text, input, textTokens));\n        textTokens = [];\n      }\n\n      // Roll back to the latest accepting state\n      cursor -= sinceAccepts;\n      multiLength -= sinceAccepts;\n\n      // Create a new multitoken\n      const Multi = latestAccepting.t;\n      const subtokens = tokens.slice(cursor - multiLength, cursor);\n      multis.push(initMultiToken(Multi, input, subtokens));\n    }\n  }\n\n  // Finally close off the textTokens (if available)\n  if (textTokens.length > 0) {\n    multis.push(initMultiToken(Text, input, textTokens));\n  }\n  return multis;\n}\n\n/**\n * Utility function for instantiating a new multitoken with all the relevant\n * fields during parsing.\n * @param {new (value: string, tokens: Token[]) => MultiToken} Multi class to instantiate\n * @param {string} input original input string\n * @param {Token[]} tokens consecutive tokens scanned from input string\n * @returns {MultiToken}\n */\nfunction initMultiToken(Multi, input, tokens) {\n  const startIdx = tokens[0].s;\n  const endIdx = tokens[tokens.length - 1].e;\n  const value = input.slice(startIdx, endIdx);\n  return new Multi(value, tokens);\n}\n\nconst warn = typeof console !== 'undefined' && console && console.warn || (() => {});\nconst warnAdvice = 'until manual call of linkify.init(). Register all schemes and plugins before invoking linkify the first time.';\n\n// Side-effect initialization state\nconst INIT = {\n  scanner: null,\n  parser: null,\n  tokenQueue: [],\n  pluginQueue: [],\n  customSchemes: [],\n  initialized: false\n};\n\n/**\n * @typedef {{\n * \tstart: State<string>,\n * \ttokens: { groups: Collections<string> } & typeof tk\n * }} ScannerInit\n */\n\n/**\n * @typedef {{\n * \tstart: State<MultiToken>,\n * \ttokens: typeof multi\n * }} ParserInit\n */\n\n/**\n * @typedef {(arg: { scanner: ScannerInit }) => void} TokenPlugin\n */\n\n/**\n * @typedef {(arg: { scanner: ScannerInit, parser: ParserInit }) => void} Plugin\n */\n\n/**\n * De-register all plugins and reset the internal state-machine. Used for\n * testing; not required in practice.\n * @private\n */\nfunction reset() {\n  State.groups = {};\n  INIT.scanner = null;\n  INIT.parser = null;\n  INIT.tokenQueue = [];\n  INIT.pluginQueue = [];\n  INIT.customSchemes = [];\n  INIT.initialized = false;\n}\n\n/**\n * Register a token plugin to allow the scanner to recognize additional token\n * types before the parser state machine is constructed from the results.\n * @param {string} name of plugin to register\n * @param {TokenPlugin} plugin function that accepts the scanner state machine\n * and available scanner tokens and collections and extends the state machine to\n * recognize additional tokens or groups.\n */\nfunction registerTokenPlugin(name, plugin) {\n  if (typeof plugin !== 'function') {\n    throw new Error(`linkifyjs: Invalid token plugin ${plugin} (expects function)`);\n  }\n  for (let i = 0; i < INIT.tokenQueue.length; i++) {\n    if (name === INIT.tokenQueue[i][0]) {\n      warn(`linkifyjs: token plugin \"${name}\" already registered - will be overwritten`);\n      INIT.tokenQueue[i] = [name, plugin];\n      return;\n    }\n  }\n  INIT.tokenQueue.push([name, plugin]);\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register token plugin \"${name}\" ${warnAdvice}`);\n  }\n}\n\n/**\n * Register a linkify plugin\n * @param {string} name of plugin to register\n * @param {Plugin} plugin function that accepts the parser state machine and\n * extends the parser to recognize additional link types\n */\nfunction registerPlugin(name, plugin) {\n  if (typeof plugin !== 'function') {\n    throw new Error(`linkifyjs: Invalid plugin ${plugin} (expects function)`);\n  }\n  for (let i = 0; i < INIT.pluginQueue.length; i++) {\n    if (name === INIT.pluginQueue[i][0]) {\n      warn(`linkifyjs: plugin \"${name}\" already registered - will be overwritten`);\n      INIT.pluginQueue[i] = [name, plugin];\n      return;\n    }\n  }\n  INIT.pluginQueue.push([name, plugin]);\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register plugin \"${name}\" ${warnAdvice}`);\n  }\n}\n\n/**\n * Detect URLs with the following additional protocol. Anything with format\n * \"protocol://...\" will be considered a link. If `optionalSlashSlash` is set to\n * `true`, anything with format \"protocol:...\" will be considered a link.\n * @param {string} protocol\n * @param {boolean} [optionalSlashSlash]\n */\nfunction registerCustomProtocol(scheme, optionalSlashSlash) {\n  if (optionalSlashSlash === void 0) {\n    optionalSlashSlash = false;\n  }\n  if (INIT.initialized) {\n    warn(`linkifyjs: already initialized - will not register custom scheme \"${scheme}\" ${warnAdvice}`);\n  }\n  if (!/^[0-9a-z]+(-[0-9a-z]+)*$/.test(scheme)) {\n    throw new Error('linkifyjs: incorrect scheme format.\\n 1. Must only contain digits, lowercase ASCII letters or \"-\"\\n 2. Cannot start or end with \"-\"\\n 3. \"-\" cannot repeat');\n  }\n  INIT.customSchemes.push([scheme, optionalSlashSlash]);\n}\n\n/**\n * Initialize the linkify state machine. Called automatically the first time\n * linkify is called on a string, but may be called manually as well.\n */\nfunction init() {\n  // Initialize scanner state machine and plugins\n  INIT.scanner = init$2(INIT.customSchemes);\n  for (let i = 0; i < INIT.tokenQueue.length; i++) {\n    INIT.tokenQueue[i][1]({\n      scanner: INIT.scanner\n    });\n  }\n\n  // Initialize parser state machine and plugins\n  INIT.parser = init$1(INIT.scanner.tokens);\n  for (let i = 0; i < INIT.pluginQueue.length; i++) {\n    INIT.pluginQueue[i][1]({\n      scanner: INIT.scanner,\n      parser: INIT.parser\n    });\n  }\n  INIT.initialized = true;\n}\n\n/**\n * Parse a string into tokens that represent linkable and non-linkable sub-components\n * @param {string} str\n * @return {MultiToken[]} tokens\n */\nfunction tokenize(str) {\n  if (!INIT.initialized) {\n    init();\n  }\n  return run(INIT.parser.start, str, run$1(INIT.scanner.start, str));\n}\n\n/**\n * Find a list of linkable items in the given string.\n * @param {string} str string to find links in\n * @param {string | Opts} [type] either formatting options or specific type of\n * links to find, e.g., 'url' or 'email'\n * @param {Opts} [opts] formatting options for final output. Cannot be specified\n * if opts already provided in `type` argument\n*/\nfunction find(str, type, opts) {\n  if (type === void 0) {\n    type = null;\n  }\n  if (opts === void 0) {\n    opts = null;\n  }\n  if (type && typeof type === 'object') {\n    if (opts) {\n      throw Error(`linkifyjs: Invalid link type ${type}; must be a string`);\n    }\n    opts = type;\n    type = null;\n  }\n  const options = new Options(opts);\n  const tokens = tokenize(str);\n  const filtered = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.isLink && (!type || token.t === type)) {\n      filtered.push(token.toFormattedObject(options));\n    }\n  }\n  return filtered;\n}\n\n/**\n * Is the given string valid linkable text of some sort. Note that this does not\n * trim the text for you.\n *\n * Optionally pass in a second `type` param, which is the type of link to test\n * for.\n *\n * For example,\n *\n *     linkify.test(str, 'email');\n *\n * Returns `true` if str is a valid email.\n * @param {string} str string to test for links\n * @param {string} [type] optional specific link type to look for\n * @returns boolean true/false\n */\nfunction test(str, type) {\n  if (type === void 0) {\n    type = null;\n  }\n  const tokens = tokenize(str);\n  return tokens.length === 1 && tokens[0].isLink && (!type || tokens[0].t === type);\n}\n\nexport { MultiToken, Options, State, createTokenClass, find, init, multi, options, regexp, registerCustomProtocol, registerPlugin, registerTokenPlugin, reset, stringToArray, test, tokenize };\n", "import {\n  combineTransactionSteps,\n  findChildrenInRange,\n  getChangedRanges,\n  getMarksBetween,\n  NodeWithPos,\n} from '@tiptap/core'\nimport { MarkType } from '@tiptap/pm/model'\nimport { Plugin, PluginKey } from '@tiptap/pm/state'\nimport { find, test } from 'linkifyjs'\n\ntype AutolinkOptions = {\n  type: MarkType\n  validate?: (url: string) => boolean\n}\n\nexport function autolink(options: AutolinkOptions): Plugin {\n  return new Plugin({\n    key: new PluginKey('autolink'),\n    appendTransaction: (transactions, oldState, newState) => {\n      const docChanges = transactions.some(transaction => transaction.docChanged) && !oldState.doc.eq(newState.doc)\n      const preventAutolink = transactions.some(transaction => transaction.getMeta('preventAutolink'))\n\n      if (!docChanges || preventAutolink) {\n        return\n      }\n\n      const { tr } = newState\n      const transform = combineTransactionSteps(oldState.doc, [...transactions])\n      const { mapping } = transform\n      const changes = getChangedRanges(transform)\n\n      changes.forEach(({ oldRange, newRange }) => {\n        // at first we check if we have to remove links\n        getMarksBetween(oldRange.from, oldRange.to, oldState.doc)\n          .filter(item => item.mark.type === options.type)\n          .forEach(oldMark => {\n            const newFrom = mapping.map(oldMark.from)\n            const newTo = mapping.map(oldMark.to)\n            const newMarks = getMarksBetween(newFrom, newTo, newState.doc).filter(\n              item => item.mark.type === options.type,\n            )\n\n            if (!newMarks.length) {\n              return\n            }\n\n            const newMark = newMarks[0]\n            const oldLinkText = oldState.doc.textBetween(oldMark.from, oldMark.to, undefined, ' ')\n            const newLinkText = newState.doc.textBetween(newMark.from, newMark.to, undefined, ' ')\n            const wasLink = test(oldLinkText)\n            const isLink = test(newLinkText)\n\n            // remove only the link, if it was a link before too\n            // because we don’t want to remove links that were set manually\n            if (wasLink && !isLink) {\n              tr.removeMark(newMark.from, newMark.to, options.type)\n            }\n          })\n\n        // now let’s see if we can add new links\n        const nodesInChangedRanges = findChildrenInRange(\n          newState.doc,\n          newRange,\n          node => node.isTextblock,\n        )\n\n        let textBlock: NodeWithPos | undefined\n        let textBeforeWhitespace: string | undefined\n\n        if (nodesInChangedRanges.length > 1) {\n          // Grab the first node within the changed ranges (ex. the first of two paragraphs when hitting enter)\n          textBlock = nodesInChangedRanges[0]\n          textBeforeWhitespace = newState.doc.textBetween(\n            textBlock.pos,\n            textBlock.pos + textBlock.node.nodeSize,\n            undefined,\n            ' ',\n          )\n        } else if (\n          nodesInChangedRanges.length\n          // We want to make sure to include the block seperator argument to treat hard breaks like spaces\n          && newState.doc.textBetween(newRange.from, newRange.to, ' ', ' ').endsWith(' ')\n        ) {\n          textBlock = nodesInChangedRanges[0]\n          textBeforeWhitespace = newState.doc.textBetween(\n            textBlock.pos,\n            newRange.to,\n            undefined,\n            ' ',\n          )\n        }\n\n        if (textBlock && textBeforeWhitespace) {\n          const wordsBeforeWhitespace = textBeforeWhitespace.split(' ').filter(s => s !== '')\n\n          if (wordsBeforeWhitespace.length <= 0) {\n            return false\n          }\n\n          const lastWordBeforeSpace = wordsBeforeWhitespace[wordsBeforeWhitespace.length - 1]\n          const lastWordAndBlockOffset = textBlock.pos + textBeforeWhitespace.lastIndexOf(lastWordBeforeSpace)\n\n          if (!lastWordBeforeSpace) {\n            return false\n          }\n\n          find(lastWordBeforeSpace)\n            .filter(link => link.isLink)\n            .filter(link => {\n              if (options.validate) {\n                return options.validate(link.value)\n              }\n              return true\n            })\n            // calculate link position\n            .map(link => ({\n              ...link,\n              from: lastWordAndBlockOffset + link.start + 1,\n              to: lastWordAndBlockOffset + link.end + 1,\n            }))\n            // add link mark\n            .forEach(link => {\n              tr.addMark(\n                link.from,\n                link.to,\n                options.type.create({\n                  href: link.href,\n                }),\n              )\n            })\n        }\n      })\n\n      if (!tr.steps.length) {\n        return\n      }\n\n      return tr\n    },\n  })\n}\n", "import { getAttributes } from '@tiptap/core'\nimport { MarkType } from '@tiptap/pm/model'\nimport { Plugin, PluginKey } from '@tiptap/pm/state'\n\ntype ClickHandlerOptions = {\n  type: MarkType\n}\n\nexport function clickHandler(options: ClickHandlerOptions): Plugin {\n  return new Plugin({\n    key: new PluginKey('handleClickLink'),\n    props: {\n      handleClick: (view, pos, event) => {\n        if (event.button !== 0) {\n          return false\n        }\n\n        const attrs = getAttributes(view.state, options.type.name)\n        const link = (event.target as HTMLElement)?.closest('a')\n\n        const href = link?.href ?? attrs.href\n        const target = link?.target ?? attrs.target\n\n        if (link && href) {\n          window.open(href, target)\n\n          return true\n        }\n\n        return false\n      },\n    },\n  })\n}\n", "import { Editor } from '@tiptap/core'\nimport { MarkType } from '@tiptap/pm/model'\nimport { Plugin, PluginKey } from '@tiptap/pm/state'\nimport { find } from 'linkifyjs'\n\ntype PasteHandlerOptions = {\n  editor: Editor\n  type: MarkType\n}\n\nexport function pasteHandler(options: PasteHandlerOptions): Plugin {\n  return new Plugin({\n    key: new PluginKey('handlePasteLink'),\n    props: {\n      handlePaste: (view, event, slice) => {\n        const { state } = view\n        const { selection } = state\n        const { empty } = selection\n\n        if (empty) {\n          return false\n        }\n\n        let textContent = ''\n\n        slice.content.forEach(node => {\n          textContent += node.textContent\n        })\n\n        const link = find(textContent).find(item => item.isLink && item.value === textContent)\n\n        if (!textContent || !link) {\n          return false\n        }\n\n        options.editor.commands.setMark(options.type, {\n          href: link.href,\n        })\n\n        return true\n      },\n    },\n  })\n}\n", "import { Mark, markPasteRule, mergeAttributes } from '@tiptap/core'\nimport { Plugin } from '@tiptap/pm/state'\nimport { find, registerCustomProtocol, reset } from 'linkifyjs'\n\nimport { autolink } from './helpers/autolink'\nimport { clickHandler } from './helpers/clickHandler'\nimport { pasteHandler } from './helpers/pasteHandler'\n\nexport interface LinkProtocolOptions {\n  scheme: string;\n  optionalSlashes?: boolean;\n}\n\nexport interface LinkOptions {\n  /**\n   * If enabled, it adds links as you type.\n   */\n  autolink: boolean\n  /**\n   * An array of custom protocols to be registered with linkifyjs.\n   */\n  protocols: Array<LinkProtocolOptions | string>\n  /**\n   * If enabled, links will be opened on click.\n   */\n  openOnClick: boolean\n  /**\n   * Adds a link to the current selection if the pasted content only contains an url.\n   */\n  linkOnPaste: boolean\n  /**\n   * A list of HTML attributes to be rendered.\n   */\n  HTMLAttributes: Record<string, any>\n  /**\n   * A validation function that modifies link verification for the auto linker.\n   * @param url - The url to be validated.\n   * @returns - True if the url is valid, false otherwise.\n   */\n  validate?: (url: string) => boolean\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    link: {\n      /**\n       * Set a link mark\n       */\n      setLink: (attributes: { href: string; target?: string | null }) => ReturnType\n      /**\n       * Toggle a link mark\n       */\n      toggleLink: (attributes: { href: string; target?: string | null }) => ReturnType\n      /**\n       * Unset a link mark\n       */\n      unsetLink: () => ReturnType\n    }\n  }\n}\n\nexport const Link = Mark.create<LinkOptions>({\n  name: 'link',\n\n  priority: 1000,\n\n  keepOnSplit: false,\n\n  onCreate() {\n    this.options.protocols.forEach(protocol => {\n      if (typeof protocol === 'string') {\n        registerCustomProtocol(protocol)\n        return\n      }\n      registerCustomProtocol(protocol.scheme, protocol.optionalSlashes)\n    })\n  },\n\n  onDestroy() {\n    reset()\n  },\n\n  inclusive() {\n    return this.options.autolink\n  },\n\n  addOptions() {\n    return {\n      openOnClick: true,\n      linkOnPaste: true,\n      autolink: true,\n      protocols: [],\n      HTMLAttributes: {\n        target: '_blank',\n        rel: 'noopener noreferrer nofollow',\n        class: null,\n      },\n      validate: undefined,\n    }\n  },\n\n  addAttributes() {\n    return {\n      href: {\n        default: null,\n      },\n      target: {\n        default: this.options.HTMLAttributes.target,\n      },\n      class: {\n        default: this.options.HTMLAttributes.class,\n      },\n    }\n  },\n\n  parseHTML() {\n    return [{ tag: 'a[href]:not([href *= \"javascript:\" i])' }]\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return ['a', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), 0]\n  },\n\n  addCommands() {\n    return {\n      setLink:\n        attributes => ({ chain }) => {\n          return chain().setMark(this.name, attributes).setMeta('preventAutolink', true).run()\n        },\n\n      toggleLink:\n        attributes => ({ chain }) => {\n          return chain()\n            .toggleMark(this.name, attributes, { extendEmptyMarkRange: true })\n            .setMeta('preventAutolink', true)\n            .run()\n        },\n\n      unsetLink:\n        () => ({ chain }) => {\n          return chain()\n            .unsetMark(this.name, { extendEmptyMarkRange: true })\n            .setMeta('preventAutolink', true)\n            .run()\n        },\n    }\n  },\n\n  addPasteRules() {\n    return [\n      markPasteRule({\n        find: text => find(text)\n          .filter(link => {\n            if (this.options.validate) {\n              return this.options.validate(link.value)\n            }\n\n            return true\n          })\n          .filter(link => link.isLink)\n          .map(link => ({\n            text: link.value,\n            index: link.start,\n            data: link,\n          })),\n        type: this.type,\n        getAttributes: match => ({\n          href: match.data?.href,\n        }),\n      }),\n    ]\n  },\n\n  addProseMirrorPlugins() {\n    const plugins: Plugin[] = []\n\n    if (this.options.autolink) {\n      plugins.push(\n        autolink({\n          type: this.type,\n          validate: this.options.validate,\n        }),\n      )\n    }\n\n    if (this.options.openOnClick) {\n      plugins.push(\n        clickHandler({\n          type: this.type,\n        }),\n      )\n    }\n\n    if (this.options.linkOnPaste) {\n      plugins.push(\n        pasteHandler({\n          editor: this.editor,\n          type: this.type,\n        }),\n      )\n    }\n\n    return plugins\n  },\n})\n", "import TipTapLink from '@tiptap/extension-link';\n\nexport const Link = TipTapLink.extend({\n  addKeyboardShortcuts: () => ({\n    'Mod-k': () => {\n      window.dispatchEvent(new Event('edit-link'));\n      return true;\n    },\n  }),\n}).configure({ openOnClick: false });\n"],
  "mappings": "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",
  "names": ["__defProp", "__getOwnPropSymbols", "__hasOwnProp", "__propIsEnum", "__defNormalProp", "__spreadValues", "React", "__defProp", "__getOwnPropSymbols", "__hasOwnProp", "__propIsEnum", "__defNormalProp", "__spreadValues", "useStyles", "__defProp", "__getOwnPropSymbols", "__hasOwnProp", "__propIsEnum", "__defNormalProp", "__spreadValues", "__objRest", "defaultProps", "React", "useStyles", "__defProp", "__getOwnPropSymbols", "__hasOwnProp", "__propIsEnum", "__defNormalProp", "__spreadValues", "__objRest", "defaultProps", "React", "useStyles", "__defProp", "__getOwnPropSymbols", "__hasOwnProp", "__propIsEnum", "__defNormalProp", "__spreadValues", "__objRest", "defaultProps", "React", "useStyles", "__defProp", "__getOwnPropSymbols", "__hasOwnProp", "__propIsEnum", "__defNormalProp", "__spreadValues", "__objRest", "React", "__defProp", "__getOwnPropSymbols", "__hasOwnProp", "__propIsEnum", "__defNormalProp", "__spreadValues", "React", "__defProp", "__getOwnPropSymbols", "__hasOwnProp", "__propIsEnum", "__defNormalProp", "__spreadValues", "React", "__defProp", "__getOwnPropSymbols", "__hasOwnProp", "__propIsEnum", "__defNormalProp", "__spreadValues", "useStyles", "__defProp", "__defProps", "__getOwnPropDescs", "__getOwnPropSymbols", "__hasOwnProp", "__propIsEnum", "__defNormalProp", "__spreadValues", "__spreadProps", "__objRest", "React", "defaultProps", "__defProp", "__defProps", "__getOwnPropDescs", "__getOwnPropSymbols", "__hasOwnProp", "__propIsEnum", "__defNormalProp", "__spreadValues", "__spreadProps", "__objRest", "defaultProps", "React", "__defProp", "__defProps", "__getOwnPropDescs", "__getOwnPropSymbols", "__hasOwnProp", "__propIsEnum", "__defNormalProp", "__spreadValues", "__spreadProps", "__objRest", "defaultProps", "React", "__defProp", "__defProps", "__getOwnPropDescs", "__getOwnPropSymbols", "__hasOwnProp", "__propIsEnum", "__defNormalProp", "__spreadValues", "__spreadProps", "__objRest", "defaultProps", "React", "controls.BoldControl", "controls.ItalicControl", "controls.StrikeThroughControl", "controls.UnderlineControl", "controls.ClearFormattingControl", "controls.H1Control", "controls.H2Control", "controls.H3Control", "controls.H4Control", "controls.H5Control", "controls.H6Control", "controls.BulletListControl", "controls.OrderedListControl", "controls.LinkControl", "controls.UnlinkControl", "controls.BlockquoteControl", "controls.AlignLeftControl", "controls.AlignRightControl", "controls.AlignCenterControl", "controls.AlignJustifyControl", "controls.SuperscriptControl", "controls.SubscriptControl", "controls.CodeControl", "controls.CodeBlockControl", "controls.ColorPickerControl", "controls.ColorControl", "controls.HighlightControl", "controls.HrControl", "controls.UnsetColorControl", "nextState", "regexp", "scheme", "options", "scheme", "options", "options", "tr", "Link"]
}
